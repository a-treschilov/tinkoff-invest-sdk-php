<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: orders.proto

namespace Tinkoff\Invest\V1\GetOrderPriceResponse;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.ExtraFuture</code>
 */
class ExtraFuture extends \Google\Protobuf\Internal\Message
{
    /**
     *Гарантийное обеспечение для фьючерса
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.MoneyValue initial_margin = 2;</code>
     */
    protected $initial_margin = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Tinkoff\Invest\V1\MoneyValue $initial_margin
     *          Гарантийное обеспечение для фьючерса
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Orders::initOnce();
        parent::__construct($data);
    }

    /**
     *Гарантийное обеспечение для фьючерса
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.MoneyValue initial_margin = 2;</code>
     * @return \Tinkoff\Invest\V1\MoneyValue|null
     */
    public function getInitialMargin()
    {
        return $this->initial_margin;
    }

    public function hasInitialMargin()
    {
        return isset($this->initial_margin);
    }

    public function clearInitialMargin()
    {
        unset($this->initial_margin);
    }

    /**
     *Гарантийное обеспечение для фьючерса
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.MoneyValue initial_margin = 2;</code>
     * @param \Tinkoff\Invest\V1\MoneyValue $var
     * @return $this
     */
    public function setInitialMargin($var)
    {
        GPBUtil::checkMessage($var, \Tinkoff\Invest\V1\MoneyValue::class);
        $this->initial_margin = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(ExtraFuture::class, \Tinkoff\Invest\V1\GetOrderPriceResponse_ExtraFuture::class);

