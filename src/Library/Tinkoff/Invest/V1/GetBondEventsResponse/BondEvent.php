<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: instruments.proto

namespace Tinkoff\Invest\V1\GetBondEventsResponse;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>tinkoff.public.invest.api.contract.v1.GetBondEventsResponse.BondEvent</code>
 */
class BondEvent extends \Google\Protobuf\Internal\Message
{
    /**
     * Идентификатор инструмента
     *
     * Generated from protobuf field <code>string instrument_id = 2;</code>
     */
    protected $instrument_id = '';
    /**
     * Номер события для данного типа события
     *
     * Generated from protobuf field <code>int32 event_number = 3;</code>
     */
    protected $event_number = 0;
    /**
     * Дата события
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp event_date = 4;</code>
     */
    protected $event_date = null;
    /**
     * Тип события
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.GetBondEventsRequest.EventType event_type = 5;</code>
     */
    protected $event_type = 0;
    /**
     * Полное количество бумаг, задействованных в событии
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.Quotation event_total_vol = 6;</code>
     */
    protected $event_total_vol = null;
    /**
     * Дата фиксации владельцев для участия в событии
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp fix_date = 7;</code>
     */
    protected $fix_date = null;
    /**
     * Дата определения даты либо факта события
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp rate_date = 8;</code>
     */
    protected $rate_date = null;
    /**
     * Дата дефолта (если применимо)
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp default_date = 9;</code>
     */
    protected $default_date = null;
    /**
     * Дата реального исполнения обязательства
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp real_pay_date = 10;</code>
     */
    protected $real_pay_date = null;
    /**
     * Дата выплаты
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp pay_date = 11;</code>
     */
    protected $pay_date = null;
    /**
     * Выплата на одну облигацию
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.MoneyValue pay_one_bond = 12;</code>
     */
    protected $pay_one_bond = null;
    /**
     * Выплаты на все бумаги, задействованные в событии
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.MoneyValue money_flow_val = 13;</code>
     */
    protected $money_flow_val = null;
    /**
     * Признак исполнения
     *
     * Generated from protobuf field <code>string execution = 14;</code>
     */
    protected $execution = '';
    /**
     * Тип операции
     *
     * Generated from protobuf field <code>string operation_type = 15;</code>
     */
    protected $operation_type = '';
    /**
     * Стоимость операции (ставка купона, доля номинала, цена выкупа или коэффициент конвертации)
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.Quotation value = 16;</code>
     */
    protected $value = null;
    /**
     * Примечание
     *
     * Generated from protobuf field <code>string note = 17;</code>
     */
    protected $note = '';
    /**
     * ID выпуска бумаг, в который произведена конвертация (для конвертаций)
     *
     * Generated from protobuf field <code>string convert_to_fin_tool_id = 18;</code>
     */
    protected $convert_to_fin_tool_id = '';
    /**
     * Начало купонного периода
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp coupon_start_date = 19;</code>
     */
    protected $coupon_start_date = null;
    /**
     * Окончание купонного периода
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp coupon_end_date = 20;</code>
     */
    protected $coupon_end_date = null;
    /**
     * Купонный период
     *
     * Generated from protobuf field <code>int32 coupon_period = 21;</code>
     */
    protected $coupon_period = 0;
    /**
     * Ставка купона, процентов годовых
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.Quotation coupon_interest_rate = 22;</code>
     */
    protected $coupon_interest_rate = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $instrument_id
     *           Идентификатор инструмента
     *     @type int $event_number
     *           Номер события для данного типа события
     *     @type \Google\Protobuf\Timestamp $event_date
     *           Дата события
     *     @type int $event_type
     *           Тип события
     *     @type \Tinkoff\Invest\V1\Quotation $event_total_vol
     *           Полное количество бумаг, задействованных в событии
     *     @type \Google\Protobuf\Timestamp $fix_date
     *           Дата фиксации владельцев для участия в событии
     *     @type \Google\Protobuf\Timestamp $rate_date
     *           Дата определения даты либо факта события
     *     @type \Google\Protobuf\Timestamp $default_date
     *           Дата дефолта (если применимо)
     *     @type \Google\Protobuf\Timestamp $real_pay_date
     *           Дата реального исполнения обязательства
     *     @type \Google\Protobuf\Timestamp $pay_date
     *           Дата выплаты
     *     @type \Tinkoff\Invest\V1\MoneyValue $pay_one_bond
     *           Выплата на одну облигацию
     *     @type \Tinkoff\Invest\V1\MoneyValue $money_flow_val
     *           Выплаты на все бумаги, задействованные в событии
     *     @type string $execution
     *           Признак исполнения
     *     @type string $operation_type
     *           Тип операции
     *     @type \Tinkoff\Invest\V1\Quotation $value
     *           Стоимость операции (ставка купона, доля номинала, цена выкупа или коэффициент конвертации)
     *     @type string $note
     *           Примечание
     *     @type string $convert_to_fin_tool_id
     *           ID выпуска бумаг, в который произведена конвертация (для конвертаций)
     *     @type \Google\Protobuf\Timestamp $coupon_start_date
     *           Начало купонного периода
     *     @type \Google\Protobuf\Timestamp $coupon_end_date
     *           Окончание купонного периода
     *     @type int $coupon_period
     *           Купонный период
     *     @type \Tinkoff\Invest\V1\Quotation $coupon_interest_rate
     *           Ставка купона, процентов годовых
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Instruments::initOnce();
        parent::__construct($data);
    }

    /**
     * Идентификатор инструмента
     *
     * Generated from protobuf field <code>string instrument_id = 2;</code>
     * @return string
     */
    public function getInstrumentId()
    {
        return $this->instrument_id;
    }

    /**
     * Идентификатор инструмента
     *
     * Generated from protobuf field <code>string instrument_id = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setInstrumentId($var)
    {
        GPBUtil::checkString($var, True);
        $this->instrument_id = $var;

        return $this;
    }

    /**
     * Номер события для данного типа события
     *
     * Generated from protobuf field <code>int32 event_number = 3;</code>
     * @return int
     */
    public function getEventNumber()
    {
        return $this->event_number;
    }

    /**
     * Номер события для данного типа события
     *
     * Generated from protobuf field <code>int32 event_number = 3;</code>
     * @param int $var
     * @return $this
     */
    public function setEventNumber($var)
    {
        GPBUtil::checkInt32($var);
        $this->event_number = $var;

        return $this;
    }

    /**
     * Дата события
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp event_date = 4;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getEventDate()
    {
        return $this->event_date;
    }

    public function hasEventDate()
    {
        return isset($this->event_date);
    }

    public function clearEventDate()
    {
        unset($this->event_date);
    }

    /**
     * Дата события
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp event_date = 4;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setEventDate($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->event_date = $var;

        return $this;
    }

    /**
     * Тип события
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.GetBondEventsRequest.EventType event_type = 5;</code>
     * @return int
     */
    public function getEventType()
    {
        return $this->event_type;
    }

    /**
     * Тип события
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.GetBondEventsRequest.EventType event_type = 5;</code>
     * @param int $var
     * @return $this
     */
    public function setEventType($var)
    {
        GPBUtil::checkEnum($var, \Tinkoff\Invest\V1\GetBondEventsRequest\EventType::class);
        $this->event_type = $var;

        return $this;
    }

    /**
     * Полное количество бумаг, задействованных в событии
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.Quotation event_total_vol = 6;</code>
     * @return \Tinkoff\Invest\V1\Quotation|null
     */
    public function getEventTotalVol()
    {
        return $this->event_total_vol;
    }

    public function hasEventTotalVol()
    {
        return isset($this->event_total_vol);
    }

    public function clearEventTotalVol()
    {
        unset($this->event_total_vol);
    }

    /**
     * Полное количество бумаг, задействованных в событии
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.Quotation event_total_vol = 6;</code>
     * @param \Tinkoff\Invest\V1\Quotation $var
     * @return $this
     */
    public function setEventTotalVol($var)
    {
        GPBUtil::checkMessage($var, \Tinkoff\Invest\V1\Quotation::class);
        $this->event_total_vol = $var;

        return $this;
    }

    /**
     * Дата фиксации владельцев для участия в событии
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp fix_date = 7;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getFixDate()
    {
        return $this->fix_date;
    }

    public function hasFixDate()
    {
        return isset($this->fix_date);
    }

    public function clearFixDate()
    {
        unset($this->fix_date);
    }

    /**
     * Дата фиксации владельцев для участия в событии
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp fix_date = 7;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setFixDate($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->fix_date = $var;

        return $this;
    }

    /**
     * Дата определения даты либо факта события
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp rate_date = 8;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getRateDate()
    {
        return $this->rate_date;
    }

    public function hasRateDate()
    {
        return isset($this->rate_date);
    }

    public function clearRateDate()
    {
        unset($this->rate_date);
    }

    /**
     * Дата определения даты либо факта события
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp rate_date = 8;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setRateDate($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->rate_date = $var;

        return $this;
    }

    /**
     * Дата дефолта (если применимо)
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp default_date = 9;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getDefaultDate()
    {
        return $this->default_date;
    }

    public function hasDefaultDate()
    {
        return isset($this->default_date);
    }

    public function clearDefaultDate()
    {
        unset($this->default_date);
    }

    /**
     * Дата дефолта (если применимо)
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp default_date = 9;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setDefaultDate($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->default_date = $var;

        return $this;
    }

    /**
     * Дата реального исполнения обязательства
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp real_pay_date = 10;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getRealPayDate()
    {
        return $this->real_pay_date;
    }

    public function hasRealPayDate()
    {
        return isset($this->real_pay_date);
    }

    public function clearRealPayDate()
    {
        unset($this->real_pay_date);
    }

    /**
     * Дата реального исполнения обязательства
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp real_pay_date = 10;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setRealPayDate($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->real_pay_date = $var;

        return $this;
    }

    /**
     * Дата выплаты
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp pay_date = 11;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getPayDate()
    {
        return $this->pay_date;
    }

    public function hasPayDate()
    {
        return isset($this->pay_date);
    }

    public function clearPayDate()
    {
        unset($this->pay_date);
    }

    /**
     * Дата выплаты
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp pay_date = 11;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setPayDate($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->pay_date = $var;

        return $this;
    }

    /**
     * Выплата на одну облигацию
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.MoneyValue pay_one_bond = 12;</code>
     * @return \Tinkoff\Invest\V1\MoneyValue|null
     */
    public function getPayOneBond()
    {
        return $this->pay_one_bond;
    }

    public function hasPayOneBond()
    {
        return isset($this->pay_one_bond);
    }

    public function clearPayOneBond()
    {
        unset($this->pay_one_bond);
    }

    /**
     * Выплата на одну облигацию
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.MoneyValue pay_one_bond = 12;</code>
     * @param \Tinkoff\Invest\V1\MoneyValue $var
     * @return $this
     */
    public function setPayOneBond($var)
    {
        GPBUtil::checkMessage($var, \Tinkoff\Invest\V1\MoneyValue::class);
        $this->pay_one_bond = $var;

        return $this;
    }

    /**
     * Выплаты на все бумаги, задействованные в событии
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.MoneyValue money_flow_val = 13;</code>
     * @return \Tinkoff\Invest\V1\MoneyValue|null
     */
    public function getMoneyFlowVal()
    {
        return $this->money_flow_val;
    }

    public function hasMoneyFlowVal()
    {
        return isset($this->money_flow_val);
    }

    public function clearMoneyFlowVal()
    {
        unset($this->money_flow_val);
    }

    /**
     * Выплаты на все бумаги, задействованные в событии
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.MoneyValue money_flow_val = 13;</code>
     * @param \Tinkoff\Invest\V1\MoneyValue $var
     * @return $this
     */
    public function setMoneyFlowVal($var)
    {
        GPBUtil::checkMessage($var, \Tinkoff\Invest\V1\MoneyValue::class);
        $this->money_flow_val = $var;

        return $this;
    }

    /**
     * Признак исполнения
     *
     * Generated from protobuf field <code>string execution = 14;</code>
     * @return string
     */
    public function getExecution()
    {
        return $this->execution;
    }

    /**
     * Признак исполнения
     *
     * Generated from protobuf field <code>string execution = 14;</code>
     * @param string $var
     * @return $this
     */
    public function setExecution($var)
    {
        GPBUtil::checkString($var, True);
        $this->execution = $var;

        return $this;
    }

    /**
     * Тип операции
     *
     * Generated from protobuf field <code>string operation_type = 15;</code>
     * @return string
     */
    public function getOperationType()
    {
        return $this->operation_type;
    }

    /**
     * Тип операции
     *
     * Generated from protobuf field <code>string operation_type = 15;</code>
     * @param string $var
     * @return $this
     */
    public function setOperationType($var)
    {
        GPBUtil::checkString($var, True);
        $this->operation_type = $var;

        return $this;
    }

    /**
     * Стоимость операции (ставка купона, доля номинала, цена выкупа или коэффициент конвертации)
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.Quotation value = 16;</code>
     * @return \Tinkoff\Invest\V1\Quotation|null
     */
    public function getValue()
    {
        return $this->value;
    }

    public function hasValue()
    {
        return isset($this->value);
    }

    public function clearValue()
    {
        unset($this->value);
    }

    /**
     * Стоимость операции (ставка купона, доля номинала, цена выкупа или коэффициент конвертации)
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.Quotation value = 16;</code>
     * @param \Tinkoff\Invest\V1\Quotation $var
     * @return $this
     */
    public function setValue($var)
    {
        GPBUtil::checkMessage($var, \Tinkoff\Invest\V1\Quotation::class);
        $this->value = $var;

        return $this;
    }

    /**
     * Примечание
     *
     * Generated from protobuf field <code>string note = 17;</code>
     * @return string
     */
    public function getNote()
    {
        return $this->note;
    }

    /**
     * Примечание
     *
     * Generated from protobuf field <code>string note = 17;</code>
     * @param string $var
     * @return $this
     */
    public function setNote($var)
    {
        GPBUtil::checkString($var, True);
        $this->note = $var;

        return $this;
    }

    /**
     * ID выпуска бумаг, в который произведена конвертация (для конвертаций)
     *
     * Generated from protobuf field <code>string convert_to_fin_tool_id = 18;</code>
     * @return string
     */
    public function getConvertToFinToolId()
    {
        return $this->convert_to_fin_tool_id;
    }

    /**
     * ID выпуска бумаг, в который произведена конвертация (для конвертаций)
     *
     * Generated from protobuf field <code>string convert_to_fin_tool_id = 18;</code>
     * @param string $var
     * @return $this
     */
    public function setConvertToFinToolId($var)
    {
        GPBUtil::checkString($var, True);
        $this->convert_to_fin_tool_id = $var;

        return $this;
    }

    /**
     * Начало купонного периода
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp coupon_start_date = 19;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getCouponStartDate()
    {
        return $this->coupon_start_date;
    }

    public function hasCouponStartDate()
    {
        return isset($this->coupon_start_date);
    }

    public function clearCouponStartDate()
    {
        unset($this->coupon_start_date);
    }

    /**
     * Начало купонного периода
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp coupon_start_date = 19;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setCouponStartDate($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->coupon_start_date = $var;

        return $this;
    }

    /**
     * Окончание купонного периода
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp coupon_end_date = 20;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getCouponEndDate()
    {
        return $this->coupon_end_date;
    }

    public function hasCouponEndDate()
    {
        return isset($this->coupon_end_date);
    }

    public function clearCouponEndDate()
    {
        unset($this->coupon_end_date);
    }

    /**
     * Окончание купонного периода
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp coupon_end_date = 20;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setCouponEndDate($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->coupon_end_date = $var;

        return $this;
    }

    /**
     * Купонный период
     *
     * Generated from protobuf field <code>int32 coupon_period = 21;</code>
     * @return int
     */
    public function getCouponPeriod()
    {
        return $this->coupon_period;
    }

    /**
     * Купонный период
     *
     * Generated from protobuf field <code>int32 coupon_period = 21;</code>
     * @param int $var
     * @return $this
     */
    public function setCouponPeriod($var)
    {
        GPBUtil::checkInt32($var);
        $this->coupon_period = $var;

        return $this;
    }

    /**
     * Ставка купона, процентов годовых
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.Quotation coupon_interest_rate = 22;</code>
     * @return \Tinkoff\Invest\V1\Quotation|null
     */
    public function getCouponInterestRate()
    {
        return $this->coupon_interest_rate;
    }

    public function hasCouponInterestRate()
    {
        return isset($this->coupon_interest_rate);
    }

    public function clearCouponInterestRate()
    {
        unset($this->coupon_interest_rate);
    }

    /**
     * Ставка купона, процентов годовых
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.Quotation coupon_interest_rate = 22;</code>
     * @param \Tinkoff\Invest\V1\Quotation $var
     * @return $this
     */
    public function setCouponInterestRate($var)
    {
        GPBUtil::checkMessage($var, \Tinkoff\Invest\V1\Quotation::class);
        $this->coupon_interest_rate = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(BondEvent::class, \Tinkoff\Invest\V1\GetBondEventsResponse_BondEvent::class);

