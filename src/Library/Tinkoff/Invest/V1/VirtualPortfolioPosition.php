<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: operations.proto

namespace Tinkoff\Invest\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>tinkoff.public.invest.api.contract.v1.VirtualPortfolioPosition</code>
 */
class VirtualPortfolioPosition extends \Google\Protobuf\Internal\Message
{
    /**
     *position_uid-идентификатора инструмента
     *
     * Generated from protobuf field <code>string position_uid = 1;</code>
     */
    protected $position_uid = '';
    /**
     *instrument_uid-идентификатора инструмента
     *
     * Generated from protobuf field <code>string instrument_uid = 2;</code>
     */
    protected $instrument_uid = '';
    /**
     *Figi-идентификатора инструмента.
     *
     * Generated from protobuf field <code>string figi = 3;</code>
     */
    protected $figi = '';
    /**
     *Тип инструмента.
     *
     * Generated from protobuf field <code>string instrument_type = 4;</code>
     */
    protected $instrument_type = '';
    /**
     *Количество инструмента в портфеле в штуках.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.Quotation quantity = 5;</code>
     */
    protected $quantity = null;
    /**
     *Средневзвешенная цена позиции. **Возможна задержка до секунды для пересчёта**.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.MoneyValue average_position_price = 6;</code>
     */
    protected $average_position_price = null;
    /**
     *Текущая рассчитанная доходность позиции.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.Quotation expected_yield = 7;</code>
     */
    protected $expected_yield = null;
    /**
     *Текущая рассчитанная доходность позиции.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.Quotation expected_yield_fifo = 8;</code>
     */
    protected $expected_yield_fifo = null;
    /**
     *Дата до которой нужно продать виртуальные бумаги, после этой даты виртуальная позиция "сгорит"
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp expire_date = 9;</code>
     */
    protected $expire_date = null;
    /**
     *Текущая цена за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.MoneyValue current_price = 10;</code>
     */
    protected $current_price = null;
    /**
     *Средняя цена позиции по методу FIFO. **Возможна задержка до секунды для пересчёта**.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.MoneyValue average_position_price_fifo = 11;</code>
     */
    protected $average_position_price_fifo = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $position_uid
     *          position_uid-идентификатора инструмента
     *     @type string $instrument_uid
     *          instrument_uid-идентификатора инструмента
     *     @type string $figi
     *          Figi-идентификатора инструмента.
     *     @type string $instrument_type
     *          Тип инструмента.
     *     @type \Tinkoff\Invest\V1\Quotation $quantity
     *          Количество инструмента в портфеле в штуках.
     *     @type \Tinkoff\Invest\V1\MoneyValue $average_position_price
     *          Средневзвешенная цена позиции. **Возможна задержка до секунды для пересчёта**.
     *     @type \Tinkoff\Invest\V1\Quotation $expected_yield
     *          Текущая рассчитанная доходность позиции.
     *     @type \Tinkoff\Invest\V1\Quotation $expected_yield_fifo
     *          Текущая рассчитанная доходность позиции.
     *     @type \Google\Protobuf\Timestamp $expire_date
     *          Дата до которой нужно продать виртуальные бумаги, после этой даты виртуальная позиция "сгорит"
     *     @type \Tinkoff\Invest\V1\MoneyValue $current_price
     *          Текущая цена за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента.
     *     @type \Tinkoff\Invest\V1\MoneyValue $average_position_price_fifo
     *          Средняя цена позиции по методу FIFO. **Возможна задержка до секунды для пересчёта**.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Operations::initOnce();
        parent::__construct($data);
    }

    /**
     *position_uid-идентификатора инструмента
     *
     * Generated from protobuf field <code>string position_uid = 1;</code>
     * @return string
     */
    public function getPositionUid()
    {
        return $this->position_uid;
    }

    /**
     *position_uid-идентификатора инструмента
     *
     * Generated from protobuf field <code>string position_uid = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setPositionUid($var)
    {
        GPBUtil::checkString($var, True);
        $this->position_uid = $var;

        return $this;
    }

    /**
     *instrument_uid-идентификатора инструмента
     *
     * Generated from protobuf field <code>string instrument_uid = 2;</code>
     * @return string
     */
    public function getInstrumentUid()
    {
        return $this->instrument_uid;
    }

    /**
     *instrument_uid-идентификатора инструмента
     *
     * Generated from protobuf field <code>string instrument_uid = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setInstrumentUid($var)
    {
        GPBUtil::checkString($var, True);
        $this->instrument_uid = $var;

        return $this;
    }

    /**
     *Figi-идентификатора инструмента.
     *
     * Generated from protobuf field <code>string figi = 3;</code>
     * @return string
     */
    public function getFigi()
    {
        return $this->figi;
    }

    /**
     *Figi-идентификатора инструмента.
     *
     * Generated from protobuf field <code>string figi = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setFigi($var)
    {
        GPBUtil::checkString($var, True);
        $this->figi = $var;

        return $this;
    }

    /**
     *Тип инструмента.
     *
     * Generated from protobuf field <code>string instrument_type = 4;</code>
     * @return string
     */
    public function getInstrumentType()
    {
        return $this->instrument_type;
    }

    /**
     *Тип инструмента.
     *
     * Generated from protobuf field <code>string instrument_type = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setInstrumentType($var)
    {
        GPBUtil::checkString($var, True);
        $this->instrument_type = $var;

        return $this;
    }

    /**
     *Количество инструмента в портфеле в штуках.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.Quotation quantity = 5;</code>
     * @return \Tinkoff\Invest\V1\Quotation
     */
    public function getQuantity()
    {
        return $this->quantity;
    }

    /**
     *Количество инструмента в портфеле в штуках.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.Quotation quantity = 5;</code>
     * @param \Tinkoff\Invest\V1\Quotation $var
     * @return $this
     */
    public function setQuantity($var)
    {
        GPBUtil::checkMessage($var, \Tinkoff\Invest\V1\Quotation::class);
        $this->quantity = $var;

        return $this;
    }

    /**
     *Средневзвешенная цена позиции. **Возможна задержка до секунды для пересчёта**.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.MoneyValue average_position_price = 6;</code>
     * @return \Tinkoff\Invest\V1\MoneyValue
     */
    public function getAveragePositionPrice()
    {
        return $this->average_position_price;
    }

    /**
     *Средневзвешенная цена позиции. **Возможна задержка до секунды для пересчёта**.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.MoneyValue average_position_price = 6;</code>
     * @param \Tinkoff\Invest\V1\MoneyValue $var
     * @return $this
     */
    public function setAveragePositionPrice($var)
    {
        GPBUtil::checkMessage($var, \Tinkoff\Invest\V1\MoneyValue::class);
        $this->average_position_price = $var;

        return $this;
    }

    /**
     *Текущая рассчитанная доходность позиции.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.Quotation expected_yield = 7;</code>
     * @return \Tinkoff\Invest\V1\Quotation
     */
    public function getExpectedYield()
    {
        return $this->expected_yield;
    }

    /**
     *Текущая рассчитанная доходность позиции.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.Quotation expected_yield = 7;</code>
     * @param \Tinkoff\Invest\V1\Quotation $var
     * @return $this
     */
    public function setExpectedYield($var)
    {
        GPBUtil::checkMessage($var, \Tinkoff\Invest\V1\Quotation::class);
        $this->expected_yield = $var;

        return $this;
    }

    /**
     *Текущая рассчитанная доходность позиции.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.Quotation expected_yield_fifo = 8;</code>
     * @return \Tinkoff\Invest\V1\Quotation
     */
    public function getExpectedYieldFifo()
    {
        return $this->expected_yield_fifo;
    }

    /**
     *Текущая рассчитанная доходность позиции.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.Quotation expected_yield_fifo = 8;</code>
     * @param \Tinkoff\Invest\V1\Quotation $var
     * @return $this
     */
    public function setExpectedYieldFifo($var)
    {
        GPBUtil::checkMessage($var, \Tinkoff\Invest\V1\Quotation::class);
        $this->expected_yield_fifo = $var;

        return $this;
    }

    /**
     *Дата до которой нужно продать виртуальные бумаги, после этой даты виртуальная позиция "сгорит"
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp expire_date = 9;</code>
     * @return \Google\Protobuf\Timestamp
     */
    public function getExpireDate()
    {
        return $this->expire_date;
    }

    /**
     *Дата до которой нужно продать виртуальные бумаги, после этой даты виртуальная позиция "сгорит"
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp expire_date = 9;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setExpireDate($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->expire_date = $var;

        return $this;
    }

    /**
     *Текущая цена за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.MoneyValue current_price = 10;</code>
     * @return \Tinkoff\Invest\V1\MoneyValue
     */
    public function getCurrentPrice()
    {
        return $this->current_price;
    }

    /**
     *Текущая цена за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.MoneyValue current_price = 10;</code>
     * @param \Tinkoff\Invest\V1\MoneyValue $var
     * @return $this
     */
    public function setCurrentPrice($var)
    {
        GPBUtil::checkMessage($var, \Tinkoff\Invest\V1\MoneyValue::class);
        $this->current_price = $var;

        return $this;
    }

    /**
     *Средняя цена позиции по методу FIFO. **Возможна задержка до секунды для пересчёта**.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.MoneyValue average_position_price_fifo = 11;</code>
     * @return \Tinkoff\Invest\V1\MoneyValue
     */
    public function getAveragePositionPriceFifo()
    {
        return $this->average_position_price_fifo;
    }

    /**
     *Средняя цена позиции по методу FIFO. **Возможна задержка до секунды для пересчёта**.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.MoneyValue average_position_price_fifo = 11;</code>
     * @param \Tinkoff\Invest\V1\MoneyValue $var
     * @return $this
     */
    public function setAveragePositionPriceFifo($var)
    {
        GPBUtil::checkMessage($var, \Tinkoff\Invest\V1\MoneyValue::class);
        $this->average_position_price_fifo = $var;

        return $this;
    }

}

