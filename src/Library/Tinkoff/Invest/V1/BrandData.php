<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: common.proto

namespace Tinkoff\Invest\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>tinkoff.public.invest.api.contract.v1.BrandData</code>
 */
class BrandData extends \Google\Protobuf\Internal\Message
{
    /**
     * Логотип инструмента. Имя файла для получения логотипа.
     *
     * Generated from protobuf field <code>string logo_name = 1;</code>
     */
    protected $logo_name = '';
    /**
     *	Цвет бренда.
     *
     * Generated from protobuf field <code>string logo_base_color = 2;</code>
     */
    protected $logo_base_color = '';
    /**
     * Цвет текста для цвета логотипа бренда.
     *
     * Generated from protobuf field <code>string text_color = 3;</code>
     */
    protected $text_color = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $logo_name
     *           Логотип инструмента. Имя файла для получения логотипа.
     *     @type string $logo_base_color
     *          	Цвет бренда.
     *     @type string $text_color
     *           Цвет текста для цвета логотипа бренда.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Common::initOnce();
        parent::__construct($data);
    }

    /**
     * Логотип инструмента. Имя файла для получения логотипа.
     *
     * Generated from protobuf field <code>string logo_name = 1;</code>
     * @return string
     */
    public function getLogoName()
    {
        return $this->logo_name;
    }

    /**
     * Логотип инструмента. Имя файла для получения логотипа.
     *
     * Generated from protobuf field <code>string logo_name = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setLogoName($var)
    {
        GPBUtil::checkString($var, True);
        $this->logo_name = $var;

        return $this;
    }

    /**
     *	Цвет бренда.
     *
     * Generated from protobuf field <code>string logo_base_color = 2;</code>
     * @return string
     */
    public function getLogoBaseColor()
    {
        return $this->logo_base_color;
    }

    /**
     *	Цвет бренда.
     *
     * Generated from protobuf field <code>string logo_base_color = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setLogoBaseColor($var)
    {
        GPBUtil::checkString($var, True);
        $this->logo_base_color = $var;

        return $this;
    }

    /**
     * Цвет текста для цвета логотипа бренда.
     *
     * Generated from protobuf field <code>string text_color = 3;</code>
     * @return string
     */
    public function getTextColor()
    {
        return $this->text_color;
    }

    /**
     * Цвет текста для цвета логотипа бренда.
     *
     * Generated from protobuf field <code>string text_color = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setTextColor($var)
    {
        GPBUtil::checkString($var, True);
        $this->text_color = $var;

        return $this;
    }

}

