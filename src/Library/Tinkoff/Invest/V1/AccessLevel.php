<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: users.proto

namespace Tinkoff\Invest\V1;

use UnexpectedValueException;

/**
 *Уровень доступа к счёту.
 *
 * Protobuf type <code>tinkoff.public.invest.api.contract.v1.AccessLevel</code>
 */
class AccessLevel
{
    /**
     *Уровень доступа не определён.
     *
     * Generated from protobuf enum <code>ACCOUNT_ACCESS_LEVEL_UNSPECIFIED = 0;</code>
     */
    const ACCOUNT_ACCESS_LEVEL_UNSPECIFIED = 0;
    /**
     *Полный доступ к счёту.
     *
     * Generated from protobuf enum <code>ACCOUNT_ACCESS_LEVEL_FULL_ACCESS = 1;</code>
     */
    const ACCOUNT_ACCESS_LEVEL_FULL_ACCESS = 1;
    /**
     *Доступ с уровнем прав "только чтение".
     *
     * Generated from protobuf enum <code>ACCOUNT_ACCESS_LEVEL_READ_ONLY = 2;</code>
     */
    const ACCOUNT_ACCESS_LEVEL_READ_ONLY = 2;
    /**
     *Доступ отсутствует.
     *
     * Generated from protobuf enum <code>ACCOUNT_ACCESS_LEVEL_NO_ACCESS = 3;</code>
     */
    const ACCOUNT_ACCESS_LEVEL_NO_ACCESS = 3;

    private static $valueToName = [
        self::ACCOUNT_ACCESS_LEVEL_UNSPECIFIED => 'ACCOUNT_ACCESS_LEVEL_UNSPECIFIED',
        self::ACCOUNT_ACCESS_LEVEL_FULL_ACCESS => 'ACCOUNT_ACCESS_LEVEL_FULL_ACCESS',
        self::ACCOUNT_ACCESS_LEVEL_READ_ONLY => 'ACCOUNT_ACCESS_LEVEL_READ_ONLY',
        self::ACCOUNT_ACCESS_LEVEL_NO_ACCESS => 'ACCOUNT_ACCESS_LEVEL_NO_ACCESS',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

