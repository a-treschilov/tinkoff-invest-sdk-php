<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: marketdata.proto

namespace Tinkoff\Invest\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>tinkoff.public.invest.api.contract.v1.GetTechAnalysisRequest</code>
 */
class GetTechAnalysisRequest extends \Google\Protobuf\Internal\Message
{
    /**
     *Тип технического индикатора.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.GetTechAnalysisRequest.IndicatorType indicator_type = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $indicator_type = 0;
    /**
     *Uid инструмента.
     *
     * Generated from protobuf field <code>string instrument_uid = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $instrument_uid = '';
    /**
     *Начало запрашиваемого периода в часовом поясе UTC.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp from = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $from = null;
    /**
     *Окончание запрашиваемого периода в часовом поясе UTC.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp to = 4 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $to = null;
    /**
     *Интервал, за который рассчитывается индикатор.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.GetTechAnalysisRequest.IndicatorInterval interval = 5 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $interval = 0;
    /**
     *Тип цены, используемый при расчёте индикатора.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.GetTechAnalysisRequest.TypeOfPrice type_of_price = 6 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $type_of_price = 0;
    /**
     *Торговый период, за который рассчитывается индикатор.
     *
     * Generated from protobuf field <code>int32 length = 7;</code>
     */
    protected $length = 0;
    /**
     *Параметры отклонения.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.GetTechAnalysisRequest.Deviation deviation = 8;</code>
     */
    protected $deviation = null;
    /**
     *Параметры сглаживания.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.GetTechAnalysisRequest.Smoothing smoothing = 9;</code>
     */
    protected $smoothing = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $indicator_type
     *          Тип технического индикатора.
     *     @type string $instrument_uid
     *          Uid инструмента.
     *     @type \Google\Protobuf\Timestamp $from
     *          Начало запрашиваемого периода в часовом поясе UTC.
     *     @type \Google\Protobuf\Timestamp $to
     *          Окончание запрашиваемого периода в часовом поясе UTC.
     *     @type int $interval
     *          Интервал, за который рассчитывается индикатор.
     *     @type int $type_of_price
     *          Тип цены, используемый при расчёте индикатора.
     *     @type int $length
     *          Торговый период, за который рассчитывается индикатор.
     *     @type \Tinkoff\Invest\V1\GetTechAnalysisRequest\Deviation $deviation
     *          Параметры отклонения.
     *     @type \Tinkoff\Invest\V1\GetTechAnalysisRequest\Smoothing $smoothing
     *          Параметры сглаживания.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Marketdata::initOnce();
        parent::__construct($data);
    }

    /**
     *Тип технического индикатора.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.GetTechAnalysisRequest.IndicatorType indicator_type = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return int
     */
    public function getIndicatorType()
    {
        return $this->indicator_type;
    }

    /**
     *Тип технического индикатора.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.GetTechAnalysisRequest.IndicatorType indicator_type = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param int $var
     * @return $this
     */
    public function setIndicatorType($var)
    {
        GPBUtil::checkEnum($var, \Tinkoff\Invest\V1\GetTechAnalysisRequest\IndicatorType::class);
        $this->indicator_type = $var;

        return $this;
    }

    /**
     *Uid инструмента.
     *
     * Generated from protobuf field <code>string instrument_uid = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return string
     */
    public function getInstrumentUid()
    {
        return $this->instrument_uid;
    }

    /**
     *Uid инструмента.
     *
     * Generated from protobuf field <code>string instrument_uid = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param string $var
     * @return $this
     */
    public function setInstrumentUid($var)
    {
        GPBUtil::checkString($var, True);
        $this->instrument_uid = $var;

        return $this;
    }

    /**
     *Начало запрашиваемого периода в часовом поясе UTC.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp from = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getFrom()
    {
        return $this->from;
    }

    public function hasFrom()
    {
        return isset($this->from);
    }

    public function clearFrom()
    {
        unset($this->from);
    }

    /**
     *Начало запрашиваемого периода в часовом поясе UTC.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp from = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setFrom($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->from = $var;

        return $this;
    }

    /**
     *Окончание запрашиваемого периода в часовом поясе UTC.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp to = 4 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getTo()
    {
        return $this->to;
    }

    public function hasTo()
    {
        return isset($this->to);
    }

    public function clearTo()
    {
        unset($this->to);
    }

    /**
     *Окончание запрашиваемого периода в часовом поясе UTC.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp to = 4 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setTo($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->to = $var;

        return $this;
    }

    /**
     *Интервал, за который рассчитывается индикатор.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.GetTechAnalysisRequest.IndicatorInterval interval = 5 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return int
     */
    public function getInterval()
    {
        return $this->interval;
    }

    /**
     *Интервал, за который рассчитывается индикатор.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.GetTechAnalysisRequest.IndicatorInterval interval = 5 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param int $var
     * @return $this
     */
    public function setInterval($var)
    {
        GPBUtil::checkEnum($var, \Tinkoff\Invest\V1\GetTechAnalysisRequest\IndicatorInterval::class);
        $this->interval = $var;

        return $this;
    }

    /**
     *Тип цены, используемый при расчёте индикатора.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.GetTechAnalysisRequest.TypeOfPrice type_of_price = 6 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return int
     */
    public function getTypeOfPrice()
    {
        return $this->type_of_price;
    }

    /**
     *Тип цены, используемый при расчёте индикатора.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.GetTechAnalysisRequest.TypeOfPrice type_of_price = 6 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param int $var
     * @return $this
     */
    public function setTypeOfPrice($var)
    {
        GPBUtil::checkEnum($var, \Tinkoff\Invest\V1\GetTechAnalysisRequest\TypeOfPrice::class);
        $this->type_of_price = $var;

        return $this;
    }

    /**
     *Торговый период, за который рассчитывается индикатор.
     *
     * Generated from protobuf field <code>int32 length = 7;</code>
     * @return int
     */
    public function getLength()
    {
        return $this->length;
    }

    /**
     *Торговый период, за который рассчитывается индикатор.
     *
     * Generated from protobuf field <code>int32 length = 7;</code>
     * @param int $var
     * @return $this
     */
    public function setLength($var)
    {
        GPBUtil::checkInt32($var);
        $this->length = $var;

        return $this;
    }

    /**
     *Параметры отклонения.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.GetTechAnalysisRequest.Deviation deviation = 8;</code>
     * @return \Tinkoff\Invest\V1\GetTechAnalysisRequest\Deviation|null
     */
    public function getDeviation()
    {
        return $this->deviation;
    }

    public function hasDeviation()
    {
        return isset($this->deviation);
    }

    public function clearDeviation()
    {
        unset($this->deviation);
    }

    /**
     *Параметры отклонения.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.GetTechAnalysisRequest.Deviation deviation = 8;</code>
     * @param \Tinkoff\Invest\V1\GetTechAnalysisRequest\Deviation $var
     * @return $this
     */
    public function setDeviation($var)
    {
        GPBUtil::checkMessage($var, \Tinkoff\Invest\V1\GetTechAnalysisRequest\Deviation::class);
        $this->deviation = $var;

        return $this;
    }

    /**
     *Параметры сглаживания.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.GetTechAnalysisRequest.Smoothing smoothing = 9;</code>
     * @return \Tinkoff\Invest\V1\GetTechAnalysisRequest\Smoothing|null
     */
    public function getSmoothing()
    {
        return $this->smoothing;
    }

    public function hasSmoothing()
    {
        return isset($this->smoothing);
    }

    public function clearSmoothing()
    {
        unset($this->smoothing);
    }

    /**
     *Параметры сглаживания.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.GetTechAnalysisRequest.Smoothing smoothing = 9;</code>
     * @param \Tinkoff\Invest\V1\GetTechAnalysisRequest\Smoothing $var
     * @return $this
     */
    public function setSmoothing($var)
    {
        GPBUtil::checkMessage($var, \Tinkoff\Invest\V1\GetTechAnalysisRequest\Smoothing::class);
        $this->smoothing = $var;

        return $this;
    }

}

