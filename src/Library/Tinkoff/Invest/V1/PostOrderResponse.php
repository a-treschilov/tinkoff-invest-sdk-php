<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: orders.proto

namespace Tinkoff\Invest\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 *Информация о выставлении поручения.
 *
 * Generated from protobuf message <code>tinkoff.public.invest.api.contract.v1.PostOrderResponse</code>
 */
class PostOrderResponse extends \Google\Protobuf\Internal\Message
{
    /**
     *Биржевой идентификатор заявки.
     *
     * Generated from protobuf field <code>string order_id = 1;</code>
     */
    protected $order_id = '';
    /**
     *Текущий статус заявки.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.OrderExecutionReportStatus execution_report_status = 2;</code>
     */
    protected $execution_report_status = 0;
    /**
     *Запрошено лотов.
     *
     * Generated from protobuf field <code>int64 lots_requested = 3;</code>
     */
    protected $lots_requested = 0;
    /**
     *Исполнено лотов.
     *
     * Generated from protobuf field <code>int64 lots_executed = 4;</code>
     */
    protected $lots_executed = 0;
    /**
     *Начальная цена заявки. Произведение количества запрошенных лотов на цену.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.MoneyValue initial_order_price = 5;</code>
     */
    protected $initial_order_price = null;
    /**
     *Исполненная средняя цена одного инструмента в заявке.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.MoneyValue executed_order_price = 6;</code>
     */
    protected $executed_order_price = null;
    /**
     *Итоговая стоимость заявки, включающая все комиссии.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.MoneyValue total_order_amount = 7;</code>
     */
    protected $total_order_amount = null;
    /**
     *Начальная комиссия. Комиссия рассчитанная при выставлении заявки.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.MoneyValue initial_commission = 8;</code>
     */
    protected $initial_commission = null;
    /**
     *Фактическая комиссия по итогам исполнения заявки.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.MoneyValue executed_commission = 9;</code>
     */
    protected $executed_commission = null;
    /**
     *Значение НКД (накопленного купонного дохода) на дату. Подробнее: [НКД при выставлении торговых поручений](https://russianinvestments.github.io/investAPI/head-orders#coupon)
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.MoneyValue aci_value = 10;</code>
     */
    protected $aci_value = null;
    /**
     * Figi-идентификатор инструмента.
     *
     * Generated from protobuf field <code>string figi = 11;</code>
     */
    protected $figi = '';
    /**
     *Направление сделки.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.OrderDirection direction = 12;</code>
     */
    protected $direction = 0;
    /**
     *Начальная цена за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.MoneyValue initial_security_price = 13;</code>
     */
    protected $initial_security_price = null;
    /**
     *Тип заявки.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.OrderType order_type = 14;</code>
     */
    protected $order_type = 0;
    /**
     *Дополнительные данные об исполнении заявки.
     *
     * Generated from protobuf field <code>string message = 15;</code>
     */
    protected $message = '';
    /**
     *Начальная цена заявки в пунктах (для фьючерсов).
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.Quotation initial_order_price_pt = 16;</code>
     */
    protected $initial_order_price_pt = null;
    /**
     *UID идентификатор инструмента.
     *
     * Generated from protobuf field <code>string instrument_uid = 17;</code>
     */
    protected $instrument_uid = '';
    /**
     *Идентификатор ключа идемпотентности, переданный клиентом, в формате UID. Максимальная длина 36 символов.
     *
     * Generated from protobuf field <code>string order_request_id = 20;</code>
     */
    protected $order_request_id = '';
    /**
     *Метадата
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.ResponseMetadata response_metadata = 254;</code>
     */
    protected $response_metadata = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $order_id
     *          Биржевой идентификатор заявки.
     *     @type int $execution_report_status
     *          Текущий статус заявки.
     *     @type int|string $lots_requested
     *          Запрошено лотов.
     *     @type int|string $lots_executed
     *          Исполнено лотов.
     *     @type \Tinkoff\Invest\V1\MoneyValue $initial_order_price
     *          Начальная цена заявки. Произведение количества запрошенных лотов на цену.
     *     @type \Tinkoff\Invest\V1\MoneyValue $executed_order_price
     *          Исполненная средняя цена одного инструмента в заявке.
     *     @type \Tinkoff\Invest\V1\MoneyValue $total_order_amount
     *          Итоговая стоимость заявки, включающая все комиссии.
     *     @type \Tinkoff\Invest\V1\MoneyValue $initial_commission
     *          Начальная комиссия. Комиссия рассчитанная при выставлении заявки.
     *     @type \Tinkoff\Invest\V1\MoneyValue $executed_commission
     *          Фактическая комиссия по итогам исполнения заявки.
     *     @type \Tinkoff\Invest\V1\MoneyValue $aci_value
     *          Значение НКД (накопленного купонного дохода) на дату. Подробнее: [НКД при выставлении торговых поручений](https://russianinvestments.github.io/investAPI/head-orders#coupon)
     *     @type string $figi
     *           Figi-идентификатор инструмента.
     *     @type int $direction
     *          Направление сделки.
     *     @type \Tinkoff\Invest\V1\MoneyValue $initial_security_price
     *          Начальная цена за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента.
     *     @type int $order_type
     *          Тип заявки.
     *     @type string $message
     *          Дополнительные данные об исполнении заявки.
     *     @type \Tinkoff\Invest\V1\Quotation $initial_order_price_pt
     *          Начальная цена заявки в пунктах (для фьючерсов).
     *     @type string $instrument_uid
     *          UID идентификатор инструмента.
     *     @type string $order_request_id
     *          Идентификатор ключа идемпотентности, переданный клиентом, в формате UID. Максимальная длина 36 символов.
     *     @type \Tinkoff\Invest\V1\ResponseMetadata $response_metadata
     *          Метадата
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Orders::initOnce();
        parent::__construct($data);
    }

    /**
     *Биржевой идентификатор заявки.
     *
     * Generated from protobuf field <code>string order_id = 1;</code>
     * @return string
     */
    public function getOrderId()
    {
        return $this->order_id;
    }

    /**
     *Биржевой идентификатор заявки.
     *
     * Generated from protobuf field <code>string order_id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setOrderId($var)
    {
        GPBUtil::checkString($var, True);
        $this->order_id = $var;

        return $this;
    }

    /**
     *Текущий статус заявки.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.OrderExecutionReportStatus execution_report_status = 2;</code>
     * @return int
     */
    public function getExecutionReportStatus()
    {
        return $this->execution_report_status;
    }

    /**
     *Текущий статус заявки.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.OrderExecutionReportStatus execution_report_status = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setExecutionReportStatus($var)
    {
        GPBUtil::checkEnum($var, \Tinkoff\Invest\V1\OrderExecutionReportStatus::class);
        $this->execution_report_status = $var;

        return $this;
    }

    /**
     *Запрошено лотов.
     *
     * Generated from protobuf field <code>int64 lots_requested = 3;</code>
     * @return int|string
     */
    public function getLotsRequested()
    {
        return $this->lots_requested;
    }

    /**
     *Запрошено лотов.
     *
     * Generated from protobuf field <code>int64 lots_requested = 3;</code>
     * @param int|string $var
     * @return $this
     */
    public function setLotsRequested($var)
    {
        GPBUtil::checkInt64($var);
        $this->lots_requested = $var;

        return $this;
    }

    /**
     *Исполнено лотов.
     *
     * Generated from protobuf field <code>int64 lots_executed = 4;</code>
     * @return int|string
     */
    public function getLotsExecuted()
    {
        return $this->lots_executed;
    }

    /**
     *Исполнено лотов.
     *
     * Generated from protobuf field <code>int64 lots_executed = 4;</code>
     * @param int|string $var
     * @return $this
     */
    public function setLotsExecuted($var)
    {
        GPBUtil::checkInt64($var);
        $this->lots_executed = $var;

        return $this;
    }

    /**
     *Начальная цена заявки. Произведение количества запрошенных лотов на цену.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.MoneyValue initial_order_price = 5;</code>
     * @return \Tinkoff\Invest\V1\MoneyValue|null
     */
    public function getInitialOrderPrice()
    {
        return $this->initial_order_price;
    }

    public function hasInitialOrderPrice()
    {
        return isset($this->initial_order_price);
    }

    public function clearInitialOrderPrice()
    {
        unset($this->initial_order_price);
    }

    /**
     *Начальная цена заявки. Произведение количества запрошенных лотов на цену.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.MoneyValue initial_order_price = 5;</code>
     * @param \Tinkoff\Invest\V1\MoneyValue $var
     * @return $this
     */
    public function setInitialOrderPrice($var)
    {
        GPBUtil::checkMessage($var, \Tinkoff\Invest\V1\MoneyValue::class);
        $this->initial_order_price = $var;

        return $this;
    }

    /**
     *Исполненная средняя цена одного инструмента в заявке.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.MoneyValue executed_order_price = 6;</code>
     * @return \Tinkoff\Invest\V1\MoneyValue|null
     */
    public function getExecutedOrderPrice()
    {
        return $this->executed_order_price;
    }

    public function hasExecutedOrderPrice()
    {
        return isset($this->executed_order_price);
    }

    public function clearExecutedOrderPrice()
    {
        unset($this->executed_order_price);
    }

    /**
     *Исполненная средняя цена одного инструмента в заявке.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.MoneyValue executed_order_price = 6;</code>
     * @param \Tinkoff\Invest\V1\MoneyValue $var
     * @return $this
     */
    public function setExecutedOrderPrice($var)
    {
        GPBUtil::checkMessage($var, \Tinkoff\Invest\V1\MoneyValue::class);
        $this->executed_order_price = $var;

        return $this;
    }

    /**
     *Итоговая стоимость заявки, включающая все комиссии.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.MoneyValue total_order_amount = 7;</code>
     * @return \Tinkoff\Invest\V1\MoneyValue|null
     */
    public function getTotalOrderAmount()
    {
        return $this->total_order_amount;
    }

    public function hasTotalOrderAmount()
    {
        return isset($this->total_order_amount);
    }

    public function clearTotalOrderAmount()
    {
        unset($this->total_order_amount);
    }

    /**
     *Итоговая стоимость заявки, включающая все комиссии.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.MoneyValue total_order_amount = 7;</code>
     * @param \Tinkoff\Invest\V1\MoneyValue $var
     * @return $this
     */
    public function setTotalOrderAmount($var)
    {
        GPBUtil::checkMessage($var, \Tinkoff\Invest\V1\MoneyValue::class);
        $this->total_order_amount = $var;

        return $this;
    }

    /**
     *Начальная комиссия. Комиссия рассчитанная при выставлении заявки.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.MoneyValue initial_commission = 8;</code>
     * @return \Tinkoff\Invest\V1\MoneyValue|null
     */
    public function getInitialCommission()
    {
        return $this->initial_commission;
    }

    public function hasInitialCommission()
    {
        return isset($this->initial_commission);
    }

    public function clearInitialCommission()
    {
        unset($this->initial_commission);
    }

    /**
     *Начальная комиссия. Комиссия рассчитанная при выставлении заявки.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.MoneyValue initial_commission = 8;</code>
     * @param \Tinkoff\Invest\V1\MoneyValue $var
     * @return $this
     */
    public function setInitialCommission($var)
    {
        GPBUtil::checkMessage($var, \Tinkoff\Invest\V1\MoneyValue::class);
        $this->initial_commission = $var;

        return $this;
    }

    /**
     *Фактическая комиссия по итогам исполнения заявки.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.MoneyValue executed_commission = 9;</code>
     * @return \Tinkoff\Invest\V1\MoneyValue|null
     */
    public function getExecutedCommission()
    {
        return $this->executed_commission;
    }

    public function hasExecutedCommission()
    {
        return isset($this->executed_commission);
    }

    public function clearExecutedCommission()
    {
        unset($this->executed_commission);
    }

    /**
     *Фактическая комиссия по итогам исполнения заявки.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.MoneyValue executed_commission = 9;</code>
     * @param \Tinkoff\Invest\V1\MoneyValue $var
     * @return $this
     */
    public function setExecutedCommission($var)
    {
        GPBUtil::checkMessage($var, \Tinkoff\Invest\V1\MoneyValue::class);
        $this->executed_commission = $var;

        return $this;
    }

    /**
     *Значение НКД (накопленного купонного дохода) на дату. Подробнее: [НКД при выставлении торговых поручений](https://russianinvestments.github.io/investAPI/head-orders#coupon)
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.MoneyValue aci_value = 10;</code>
     * @return \Tinkoff\Invest\V1\MoneyValue|null
     */
    public function getAciValue()
    {
        return $this->aci_value;
    }

    public function hasAciValue()
    {
        return isset($this->aci_value);
    }

    public function clearAciValue()
    {
        unset($this->aci_value);
    }

    /**
     *Значение НКД (накопленного купонного дохода) на дату. Подробнее: [НКД при выставлении торговых поручений](https://russianinvestments.github.io/investAPI/head-orders#coupon)
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.MoneyValue aci_value = 10;</code>
     * @param \Tinkoff\Invest\V1\MoneyValue $var
     * @return $this
     */
    public function setAciValue($var)
    {
        GPBUtil::checkMessage($var, \Tinkoff\Invest\V1\MoneyValue::class);
        $this->aci_value = $var;

        return $this;
    }

    /**
     * Figi-идентификатор инструмента.
     *
     * Generated from protobuf field <code>string figi = 11;</code>
     * @return string
     */
    public function getFigi()
    {
        return $this->figi;
    }

    /**
     * Figi-идентификатор инструмента.
     *
     * Generated from protobuf field <code>string figi = 11;</code>
     * @param string $var
     * @return $this
     */
    public function setFigi($var)
    {
        GPBUtil::checkString($var, True);
        $this->figi = $var;

        return $this;
    }

    /**
     *Направление сделки.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.OrderDirection direction = 12;</code>
     * @return int
     */
    public function getDirection()
    {
        return $this->direction;
    }

    /**
     *Направление сделки.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.OrderDirection direction = 12;</code>
     * @param int $var
     * @return $this
     */
    public function setDirection($var)
    {
        GPBUtil::checkEnum($var, \Tinkoff\Invest\V1\OrderDirection::class);
        $this->direction = $var;

        return $this;
    }

    /**
     *Начальная цена за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.MoneyValue initial_security_price = 13;</code>
     * @return \Tinkoff\Invest\V1\MoneyValue|null
     */
    public function getInitialSecurityPrice()
    {
        return $this->initial_security_price;
    }

    public function hasInitialSecurityPrice()
    {
        return isset($this->initial_security_price);
    }

    public function clearInitialSecurityPrice()
    {
        unset($this->initial_security_price);
    }

    /**
     *Начальная цена за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.MoneyValue initial_security_price = 13;</code>
     * @param \Tinkoff\Invest\V1\MoneyValue $var
     * @return $this
     */
    public function setInitialSecurityPrice($var)
    {
        GPBUtil::checkMessage($var, \Tinkoff\Invest\V1\MoneyValue::class);
        $this->initial_security_price = $var;

        return $this;
    }

    /**
     *Тип заявки.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.OrderType order_type = 14;</code>
     * @return int
     */
    public function getOrderType()
    {
        return $this->order_type;
    }

    /**
     *Тип заявки.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.OrderType order_type = 14;</code>
     * @param int $var
     * @return $this
     */
    public function setOrderType($var)
    {
        GPBUtil::checkEnum($var, \Tinkoff\Invest\V1\OrderType::class);
        $this->order_type = $var;

        return $this;
    }

    /**
     *Дополнительные данные об исполнении заявки.
     *
     * Generated from protobuf field <code>string message = 15;</code>
     * @return string
     */
    public function getMessage()
    {
        return $this->message;
    }

    /**
     *Дополнительные данные об исполнении заявки.
     *
     * Generated from protobuf field <code>string message = 15;</code>
     * @param string $var
     * @return $this
     */
    public function setMessage($var)
    {
        GPBUtil::checkString($var, True);
        $this->message = $var;

        return $this;
    }

    /**
     *Начальная цена заявки в пунктах (для фьючерсов).
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.Quotation initial_order_price_pt = 16;</code>
     * @return \Tinkoff\Invest\V1\Quotation|null
     */
    public function getInitialOrderPricePt()
    {
        return $this->initial_order_price_pt;
    }

    public function hasInitialOrderPricePt()
    {
        return isset($this->initial_order_price_pt);
    }

    public function clearInitialOrderPricePt()
    {
        unset($this->initial_order_price_pt);
    }

    /**
     *Начальная цена заявки в пунктах (для фьючерсов).
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.Quotation initial_order_price_pt = 16;</code>
     * @param \Tinkoff\Invest\V1\Quotation $var
     * @return $this
     */
    public function setInitialOrderPricePt($var)
    {
        GPBUtil::checkMessage($var, \Tinkoff\Invest\V1\Quotation::class);
        $this->initial_order_price_pt = $var;

        return $this;
    }

    /**
     *UID идентификатор инструмента.
     *
     * Generated from protobuf field <code>string instrument_uid = 17;</code>
     * @return string
     */
    public function getInstrumentUid()
    {
        return $this->instrument_uid;
    }

    /**
     *UID идентификатор инструмента.
     *
     * Generated from protobuf field <code>string instrument_uid = 17;</code>
     * @param string $var
     * @return $this
     */
    public function setInstrumentUid($var)
    {
        GPBUtil::checkString($var, True);
        $this->instrument_uid = $var;

        return $this;
    }

    /**
     *Идентификатор ключа идемпотентности, переданный клиентом, в формате UID. Максимальная длина 36 символов.
     *
     * Generated from protobuf field <code>string order_request_id = 20;</code>
     * @return string
     */
    public function getOrderRequestId()
    {
        return $this->order_request_id;
    }

    /**
     *Идентификатор ключа идемпотентности, переданный клиентом, в формате UID. Максимальная длина 36 символов.
     *
     * Generated from protobuf field <code>string order_request_id = 20;</code>
     * @param string $var
     * @return $this
     */
    public function setOrderRequestId($var)
    {
        GPBUtil::checkString($var, True);
        $this->order_request_id = $var;

        return $this;
    }

    /**
     *Метадата
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.ResponseMetadata response_metadata = 254;</code>
     * @return \Tinkoff\Invest\V1\ResponseMetadata|null
     */
    public function getResponseMetadata()
    {
        return $this->response_metadata;
    }

    public function hasResponseMetadata()
    {
        return isset($this->response_metadata);
    }

    public function clearResponseMetadata()
    {
        unset($this->response_metadata);
    }

    /**
     *Метадата
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.ResponseMetadata response_metadata = 254;</code>
     * @param \Tinkoff\Invest\V1\ResponseMetadata $var
     * @return $this
     */
    public function setResponseMetadata($var)
    {
        GPBUtil::checkMessage($var, \Tinkoff\Invest\V1\ResponseMetadata::class);
        $this->response_metadata = $var;

        return $this;
    }

}

