<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: operations.proto

namespace Tinkoff\Invest\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 *Запрос списка операций по счёту с пагинацией.
 *
 * Generated from protobuf message <code>tinkoff.public.invest.api.contract.v1.GetOperationsByCursorRequest</code>
 */
class GetOperationsByCursorRequest extends \Google\Protobuf\Internal\Message
{
    /**
     *Идентификатор счёта клиента, обязательный параметр. Остальные параметры опциональны.
     *
     * Generated from protobuf field <code>string account_id = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $account_id = '';
    /**
     *Идентификатор инструмента — FIGI или UID инструмента.
     *
     * Generated from protobuf field <code>optional string instrument_id = 2;</code>
     */
    protected $instrument_id = null;
    /**
     *Начало периода по UTC.
     *
     * Generated from protobuf field <code>optional .google.protobuf.Timestamp from = 6;</code>
     */
    protected $from = null;
    /**
     *Окончание периода по UTC.
     *
     * Generated from protobuf field <code>optional .google.protobuf.Timestamp to = 7;</code>
     */
    protected $to = null;
    /**
     *Идентификатор элемента, с которого начать формировать ответ.
     *
     * Generated from protobuf field <code>optional string cursor = 11;</code>
     */
    protected $cursor = null;
    /**
     *Лимит количества операций. По умолчанию — `100`, максимальное значение — `1000`.
     *
     * Generated from protobuf field <code>optional int32 limit = 12;</code>
     */
    protected $limit = null;
    /**
     *Тип операции. Принимает значение из списка `OperationType`.
     *
     * Generated from protobuf field <code>repeated .tinkoff.public.invest.api.contract.v1.OperationType operation_types = 13;</code>
     */
    private $operation_types;
    /**
     *Статус запрашиваемых операций. Возможные значения указаны в `OperationState`.
     *
     * Generated from protobuf field <code>optional .tinkoff.public.invest.api.contract.v1.OperationState state = 14;</code>
     */
    protected $state = null;
    /**
     *Флаг возврата комиссии. По умолчанию — `false`.
     *
     * Generated from protobuf field <code>optional bool without_commissions = 15;</code>
     */
    protected $without_commissions = null;
    /**
     *Флаг получения ответа без массива сделок.
     *
     * Generated from protobuf field <code>optional bool without_trades = 16;</code>
     */
    protected $without_trades = null;
    /**
     *Флаг показа overnight операций.
     *
     * Generated from protobuf field <code>optional bool without_overnights = 17;</code>
     */
    protected $without_overnights = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $account_id
     *          Идентификатор счёта клиента, обязательный параметр. Остальные параметры опциональны.
     *     @type string $instrument_id
     *          Идентификатор инструмента — FIGI или UID инструмента.
     *     @type \Google\Protobuf\Timestamp $from
     *          Начало периода по UTC.
     *     @type \Google\Protobuf\Timestamp $to
     *          Окончание периода по UTC.
     *     @type string $cursor
     *          Идентификатор элемента, с которого начать формировать ответ.
     *     @type int $limit
     *          Лимит количества операций. По умолчанию — `100`, максимальное значение — `1000`.
     *     @type array<int>|\Google\Protobuf\Internal\RepeatedField $operation_types
     *          Тип операции. Принимает значение из списка `OperationType`.
     *     @type int $state
     *          Статус запрашиваемых операций. Возможные значения указаны в `OperationState`.
     *     @type bool $without_commissions
     *          Флаг возврата комиссии. По умолчанию — `false`.
     *     @type bool $without_trades
     *          Флаг получения ответа без массива сделок.
     *     @type bool $without_overnights
     *          Флаг показа overnight операций.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Operations::initOnce();
        parent::__construct($data);
    }

    /**
     *Идентификатор счёта клиента, обязательный параметр. Остальные параметры опциональны.
     *
     * Generated from protobuf field <code>string account_id = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return string
     */
    public function getAccountId()
    {
        return $this->account_id;
    }

    /**
     *Идентификатор счёта клиента, обязательный параметр. Остальные параметры опциональны.
     *
     * Generated from protobuf field <code>string account_id = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param string $var
     * @return $this
     */
    public function setAccountId($var)
    {
        GPBUtil::checkString($var, True);
        $this->account_id = $var;

        return $this;
    }

    /**
     *Идентификатор инструмента — FIGI или UID инструмента.
     *
     * Generated from protobuf field <code>optional string instrument_id = 2;</code>
     * @return string
     */
    public function getInstrumentId()
    {
        return isset($this->instrument_id) ? $this->instrument_id : '';
    }

    public function hasInstrumentId()
    {
        return isset($this->instrument_id);
    }

    public function clearInstrumentId()
    {
        unset($this->instrument_id);
    }

    /**
     *Идентификатор инструмента — FIGI или UID инструмента.
     *
     * Generated from protobuf field <code>optional string instrument_id = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setInstrumentId($var)
    {
        GPBUtil::checkString($var, True);
        $this->instrument_id = $var;

        return $this;
    }

    /**
     *Начало периода по UTC.
     *
     * Generated from protobuf field <code>optional .google.protobuf.Timestamp from = 6;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getFrom()
    {
        return $this->from;
    }

    public function hasFrom()
    {
        return isset($this->from);
    }

    public function clearFrom()
    {
        unset($this->from);
    }

    /**
     *Начало периода по UTC.
     *
     * Generated from protobuf field <code>optional .google.protobuf.Timestamp from = 6;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setFrom($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->from = $var;

        return $this;
    }

    /**
     *Окончание периода по UTC.
     *
     * Generated from protobuf field <code>optional .google.protobuf.Timestamp to = 7;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getTo()
    {
        return $this->to;
    }

    public function hasTo()
    {
        return isset($this->to);
    }

    public function clearTo()
    {
        unset($this->to);
    }

    /**
     *Окончание периода по UTC.
     *
     * Generated from protobuf field <code>optional .google.protobuf.Timestamp to = 7;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setTo($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->to = $var;

        return $this;
    }

    /**
     *Идентификатор элемента, с которого начать формировать ответ.
     *
     * Generated from protobuf field <code>optional string cursor = 11;</code>
     * @return string
     */
    public function getCursor()
    {
        return isset($this->cursor) ? $this->cursor : '';
    }

    public function hasCursor()
    {
        return isset($this->cursor);
    }

    public function clearCursor()
    {
        unset($this->cursor);
    }

    /**
     *Идентификатор элемента, с которого начать формировать ответ.
     *
     * Generated from protobuf field <code>optional string cursor = 11;</code>
     * @param string $var
     * @return $this
     */
    public function setCursor($var)
    {
        GPBUtil::checkString($var, True);
        $this->cursor = $var;

        return $this;
    }

    /**
     *Лимит количества операций. По умолчанию — `100`, максимальное значение — `1000`.
     *
     * Generated from protobuf field <code>optional int32 limit = 12;</code>
     * @return int
     */
    public function getLimit()
    {
        return isset($this->limit) ? $this->limit : 0;
    }

    public function hasLimit()
    {
        return isset($this->limit);
    }

    public function clearLimit()
    {
        unset($this->limit);
    }

    /**
     *Лимит количества операций. По умолчанию — `100`, максимальное значение — `1000`.
     *
     * Generated from protobuf field <code>optional int32 limit = 12;</code>
     * @param int $var
     * @return $this
     */
    public function setLimit($var)
    {
        GPBUtil::checkInt32($var);
        $this->limit = $var;

        return $this;
    }

    /**
     *Тип операции. Принимает значение из списка `OperationType`.
     *
     * Generated from protobuf field <code>repeated .tinkoff.public.invest.api.contract.v1.OperationType operation_types = 13;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getOperationTypes()
    {
        return $this->operation_types;
    }

    /**
     *Тип операции. Принимает значение из списка `OperationType`.
     *
     * Generated from protobuf field <code>repeated .tinkoff.public.invest.api.contract.v1.OperationType operation_types = 13;</code>
     * @param array<int>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setOperationTypes($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::ENUM, \Tinkoff\Invest\V1\OperationType::class);
        $this->operation_types = $arr;

        return $this;
    }

    /**
     *Статус запрашиваемых операций. Возможные значения указаны в `OperationState`.
     *
     * Generated from protobuf field <code>optional .tinkoff.public.invest.api.contract.v1.OperationState state = 14;</code>
     * @return int
     */
    public function getState()
    {
        return isset($this->state) ? $this->state : 0;
    }

    public function hasState()
    {
        return isset($this->state);
    }

    public function clearState()
    {
        unset($this->state);
    }

    /**
     *Статус запрашиваемых операций. Возможные значения указаны в `OperationState`.
     *
     * Generated from protobuf field <code>optional .tinkoff.public.invest.api.contract.v1.OperationState state = 14;</code>
     * @param int $var
     * @return $this
     */
    public function setState($var)
    {
        GPBUtil::checkEnum($var, \Tinkoff\Invest\V1\OperationState::class);
        $this->state = $var;

        return $this;
    }

    /**
     *Флаг возврата комиссии. По умолчанию — `false`.
     *
     * Generated from protobuf field <code>optional bool without_commissions = 15;</code>
     * @return bool
     */
    public function getWithoutCommissions()
    {
        return isset($this->without_commissions) ? $this->without_commissions : false;
    }

    public function hasWithoutCommissions()
    {
        return isset($this->without_commissions);
    }

    public function clearWithoutCommissions()
    {
        unset($this->without_commissions);
    }

    /**
     *Флаг возврата комиссии. По умолчанию — `false`.
     *
     * Generated from protobuf field <code>optional bool without_commissions = 15;</code>
     * @param bool $var
     * @return $this
     */
    public function setWithoutCommissions($var)
    {
        GPBUtil::checkBool($var);
        $this->without_commissions = $var;

        return $this;
    }

    /**
     *Флаг получения ответа без массива сделок.
     *
     * Generated from protobuf field <code>optional bool without_trades = 16;</code>
     * @return bool
     */
    public function getWithoutTrades()
    {
        return isset($this->without_trades) ? $this->without_trades : false;
    }

    public function hasWithoutTrades()
    {
        return isset($this->without_trades);
    }

    public function clearWithoutTrades()
    {
        unset($this->without_trades);
    }

    /**
     *Флаг получения ответа без массива сделок.
     *
     * Generated from protobuf field <code>optional bool without_trades = 16;</code>
     * @param bool $var
     * @return $this
     */
    public function setWithoutTrades($var)
    {
        GPBUtil::checkBool($var);
        $this->without_trades = $var;

        return $this;
    }

    /**
     *Флаг показа overnight операций.
     *
     * Generated from protobuf field <code>optional bool without_overnights = 17;</code>
     * @return bool
     */
    public function getWithoutOvernights()
    {
        return isset($this->without_overnights) ? $this->without_overnights : false;
    }

    public function hasWithoutOvernights()
    {
        return isset($this->without_overnights);
    }

    public function clearWithoutOvernights()
    {
        unset($this->without_overnights);
    }

    /**
     *Флаг показа overnight операций.
     *
     * Generated from protobuf field <code>optional bool without_overnights = 17;</code>
     * @param bool $var
     * @return $this
     */
    public function setWithoutOvernights($var)
    {
        GPBUtil::checkBool($var);
        $this->without_overnights = $var;

        return $this;
    }

}

