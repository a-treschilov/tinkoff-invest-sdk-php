<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: instruments.proto

namespace Tinkoff\Invest\V1\TradingInterval;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>tinkoff.public.invest.api.contract.v1.TradingInterval.TimeInterval</code>
 */
class TimeInterval extends \Google\Protobuf\Internal\Message
{
    /**
     * Время начала интервала
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp start_ts = 1;</code>
     */
    protected $start_ts = null;
    /**
     * Время окончания интервала
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp end_ts = 2;</code>
     */
    protected $end_ts = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Protobuf\Timestamp $start_ts
     *           Время начала интервала
     *     @type \Google\Protobuf\Timestamp $end_ts
     *           Время окончания интервала
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Instruments::initOnce();
        parent::__construct($data);
    }

    /**
     * Время начала интервала
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp start_ts = 1;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getStartTs()
    {
        return $this->start_ts;
    }

    public function hasStartTs()
    {
        return isset($this->start_ts);
    }

    public function clearStartTs()
    {
        unset($this->start_ts);
    }

    /**
     * Время начала интервала
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp start_ts = 1;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setStartTs($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->start_ts = $var;

        return $this;
    }

    /**
     * Время окончания интервала
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp end_ts = 2;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getEndTs()
    {
        return $this->end_ts;
    }

    public function hasEndTs()
    {
        return isset($this->end_ts);
    }

    public function clearEndTs()
    {
        unset($this->end_ts);
    }

    /**
     * Время окончания интервала
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp end_ts = 2;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setEndTs($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->end_ts = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(TimeInterval::class, \Tinkoff\Invest\V1\TradingInterval_TimeInterval::class);

