<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: marketdata.proto

namespace Tinkoff\Invest\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 *Информация о цене последней сделки.
 *
 * Generated from protobuf message <code>tinkoff.public.invest.api.contract.v1.LastPrice</code>
 */
class LastPrice extends \Google\Protobuf\Internal\Message
{
    /**
     *FIGI инструмента.
     *
     * Generated from protobuf field <code>string figi = 1;</code>
     */
    protected $figi = '';
    /**
     *Цена последней сделки за 1 инструмент. Чтобы получить стоимость лота, нужно умножить на лотность инструмента. [Подробнее про перевод цен в валюту](https://russianinvestments.github.io/investAPI/faq_marketdata/#_15).
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.Quotation price = 2;</code>
     */
    protected $price = null;
    /**
     *Время получения последней цены в часовом поясе UTC по времени биржи.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp time = 3;</code>
     */
    protected $time = null;
    /**
     *UID инструмента.
     *
     * Generated from protobuf field <code>string instrument_uid = 11;</code>
     */
    protected $instrument_uid = '';
    /**
     *Тип последней цены.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.LastPriceType last_price_type = 12;</code>
     */
    protected $last_price_type = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $figi
     *          FIGI инструмента.
     *     @type \Tinkoff\Invest\V1\Quotation $price
     *          Цена последней сделки за 1 инструмент. Чтобы получить стоимость лота, нужно умножить на лотность инструмента. [Подробнее про перевод цен в валюту](https://russianinvestments.github.io/investAPI/faq_marketdata/#_15).
     *     @type \Google\Protobuf\Timestamp $time
     *          Время получения последней цены в часовом поясе UTC по времени биржи.
     *     @type string $instrument_uid
     *          UID инструмента.
     *     @type int $last_price_type
     *          Тип последней цены.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Marketdata::initOnce();
        parent::__construct($data);
    }

    /**
     *FIGI инструмента.
     *
     * Generated from protobuf field <code>string figi = 1;</code>
     * @return string
     */
    public function getFigi()
    {
        return $this->figi;
    }

    /**
     *FIGI инструмента.
     *
     * Generated from protobuf field <code>string figi = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setFigi($var)
    {
        GPBUtil::checkString($var, True);
        $this->figi = $var;

        return $this;
    }

    /**
     *Цена последней сделки за 1 инструмент. Чтобы получить стоимость лота, нужно умножить на лотность инструмента. [Подробнее про перевод цен в валюту](https://russianinvestments.github.io/investAPI/faq_marketdata/#_15).
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.Quotation price = 2;</code>
     * @return \Tinkoff\Invest\V1\Quotation|null
     */
    public function getPrice()
    {
        return $this->price;
    }

    public function hasPrice()
    {
        return isset($this->price);
    }

    public function clearPrice()
    {
        unset($this->price);
    }

    /**
     *Цена последней сделки за 1 инструмент. Чтобы получить стоимость лота, нужно умножить на лотность инструмента. [Подробнее про перевод цен в валюту](https://russianinvestments.github.io/investAPI/faq_marketdata/#_15).
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.Quotation price = 2;</code>
     * @param \Tinkoff\Invest\V1\Quotation $var
     * @return $this
     */
    public function setPrice($var)
    {
        GPBUtil::checkMessage($var, \Tinkoff\Invest\V1\Quotation::class);
        $this->price = $var;

        return $this;
    }

    /**
     *Время получения последней цены в часовом поясе UTC по времени биржи.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp time = 3;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getTime()
    {
        return $this->time;
    }

    public function hasTime()
    {
        return isset($this->time);
    }

    public function clearTime()
    {
        unset($this->time);
    }

    /**
     *Время получения последней цены в часовом поясе UTC по времени биржи.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp time = 3;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->time = $var;

        return $this;
    }

    /**
     *UID инструмента.
     *
     * Generated from protobuf field <code>string instrument_uid = 11;</code>
     * @return string
     */
    public function getInstrumentUid()
    {
        return $this->instrument_uid;
    }

    /**
     *UID инструмента.
     *
     * Generated from protobuf field <code>string instrument_uid = 11;</code>
     * @param string $var
     * @return $this
     */
    public function setInstrumentUid($var)
    {
        GPBUtil::checkString($var, True);
        $this->instrument_uid = $var;

        return $this;
    }

    /**
     *Тип последней цены.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.LastPriceType last_price_type = 12;</code>
     * @return int
     */
    public function getLastPriceType()
    {
        return $this->last_price_type;
    }

    /**
     *Тип последней цены.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.LastPriceType last_price_type = 12;</code>
     * @param int $var
     * @return $this
     */
    public function setLastPriceType($var)
    {
        GPBUtil::checkEnum($var, \Tinkoff\Invest\V1\LastPriceType::class);
        $this->last_price_type = $var;

        return $this;
    }

}

