<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: instruments.proto

namespace Tinkoff\Invest\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 *Объект передачи информации об облигации.
 *
 * Generated from protobuf message <code>tinkoff.public.invest.api.contract.v1.Bond</code>
 */
class Bond extends \Google\Protobuf\Internal\Message
{
    /**
     *FIGI-идентификатор инструмента.
     *
     * Generated from protobuf field <code>string figi = 1;</code>
     */
    protected $figi = '';
    /**
     *Тикер инструмента.
     *
     * Generated from protobuf field <code>string ticker = 2;</code>
     */
    protected $ticker = '';
    /**
     *Класс-код (секция торгов).
     *
     * Generated from protobuf field <code>string class_code = 3;</code>
     */
    protected $class_code = '';
    /**
     *ISIN-идентификатор инструмента.
     *
     * Generated from protobuf field <code>string isin = 4;</code>
     */
    protected $isin = '';
    /**
     *Лотность инструмента. Возможно совершение операций только на количества ценной бумаги, кратные параметру `lot`. [Подробнее](./glossary#lot).
     *
     * Generated from protobuf field <code>int32 lot = 5;</code>
     */
    protected $lot = 0;
    /**
     *Валюта расчетов.
     *
     * Generated from protobuf field <code>string currency = 6;</code>
     */
    protected $currency = '';
    /**
     *Коэффициент ставки риска длинной позиции по клиенту. 2 – клиент со стандартным уровнем риска (КСУР); 1 – клиент с повышенным уровнем риска (КПУР).
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.Quotation klong = 7 [deprecated = true];</code>
     * @deprecated
     */
    protected $klong = null;
    /**
     *Коэффициент ставки риска короткой позиции по клиенту. 2 – клиент со стандартным уровнем риска (КСУР); 1 – клиент с повышенным уровнем риска (КПУР).
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.Quotation kshort = 8 [deprecated = true];</code>
     * @deprecated
     */
    protected $kshort = null;
    /**
     *Ставка риска начальной маржи для КСУР лонг. [Подробнее про ставки риска](https://www.tbank.ru/invest/help/brokerage/account/margin/about/#q5).
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.Quotation dlong = 9;</code>
     */
    protected $dlong = null;
    /**
     *Ставка риска начальной маржи для КСУР шорт. [Подробнее про ставки риска](https://www.tbank.ru/invest/help/brokerage/account/margin/about/#q5).
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.Quotation dshort = 10;</code>
     */
    protected $dshort = null;
    /**
     * Ставка риска начальной маржи для КПУР лонг. [Подробнее про ставки риска](https://www.tbank.ru/invest/help/brokerage/account/margin/about/#q5).
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.Quotation dlong_min = 11;</code>
     */
    protected $dlong_min = null;
    /**
     *Ставка риска начальной маржи для КПУР шорт. [Подробнее про ставки риска](https://www.tbank.ru/invest/help/brokerage/account/margin/about/#q5).
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.Quotation dshort_min = 12;</code>
     */
    protected $dshort_min = null;
    /**
     *Признак доступности для операций в шорт.
     *
     * Generated from protobuf field <code>bool short_enabled_flag = 13;</code>
     */
    protected $short_enabled_flag = false;
    /**
     *Название инструмента.
     *
     * Generated from protobuf field <code>string name = 15;</code>
     */
    protected $name = '';
    /**
     *Tорговая площадка (секция биржи).
     *
     * Generated from protobuf field <code>string exchange = 16;</code>
     */
    protected $exchange = '';
    /**
     *Количество выплат по купонам в год.
     *
     * Generated from protobuf field <code>int32 coupon_quantity_per_year = 17;</code>
     */
    protected $coupon_quantity_per_year = 0;
    /**
     *Дата погашения облигации по UTC.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp maturity_date = 18;</code>
     */
    protected $maturity_date = null;
    /**
     *Номинал облигации.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.MoneyValue nominal = 19;</code>
     */
    protected $nominal = null;
    /**
     *Первоначальный номинал облигации.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.MoneyValue initial_nominal = 20;</code>
     */
    protected $initial_nominal = null;
    /**
     *Дата выпуска облигации по UTC.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp state_reg_date = 21;</code>
     */
    protected $state_reg_date = null;
    /**
     *Дата размещения по UTC.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp placement_date = 22;</code>
     */
    protected $placement_date = null;
    /**
     *Цена размещения.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.MoneyValue placement_price = 23;</code>
     */
    protected $placement_price = null;
    /**
     *Значение НКД (накопленного купонного дохода) на дату.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.MoneyValue aci_value = 24;</code>
     */
    protected $aci_value = null;
    /**
     *Код страны риска — то есть страны, в которой компания ведет основной бизнес.
     *
     * Generated from protobuf field <code>string country_of_risk = 25;</code>
     */
    protected $country_of_risk = '';
    /**
     *Наименование страны риска — то есть страны, в которой компания ведет основной бизнес.
     *
     * Generated from protobuf field <code>string country_of_risk_name = 26;</code>
     */
    protected $country_of_risk_name = '';
    /**
     *Сектор экономики.
     *
     * Generated from protobuf field <code>string sector = 27;</code>
     */
    protected $sector = '';
    /**
     *Форма выпуска. Возможные значения: <br/>**documentary** — документарная; <br/>**non_documentary** — бездокументарная.
     *
     * Generated from protobuf field <code>string issue_kind = 28;</code>
     */
    protected $issue_kind = '';
    /**
     *Размер выпуска.
     *
     * Generated from protobuf field <code>int64 issue_size = 29;</code>
     */
    protected $issue_size = 0;
    /**
     *Плановый размер выпуска.
     *
     * Generated from protobuf field <code>int64 issue_size_plan = 30;</code>
     */
    protected $issue_size_plan = 0;
    /**
     *Текущий режим торгов инструмента.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.SecurityTradingStatus trading_status = 31;</code>
     */
    protected $trading_status = 0;
    /**
     *Флаг, используемый ранее для определения внебиржевых инструментов. На данный момент не используется для торгуемых через API инструментов. Может использоваться как фильтр для операций, совершавшихся некоторое время назад на ОТС площадке.
     *
     * Generated from protobuf field <code>bool otc_flag = 32;</code>
     */
    protected $otc_flag = false;
    /**
     *Признак доступности для покупки.
     *
     * Generated from protobuf field <code>bool buy_available_flag = 33;</code>
     */
    protected $buy_available_flag = false;
    /**
     *Признак доступности для продажи.
     *
     * Generated from protobuf field <code>bool sell_available_flag = 34;</code>
     */
    protected $sell_available_flag = false;
    /**
     *Признак облигации с плавающим купоном.
     *
     * Generated from protobuf field <code>bool floating_coupon_flag = 35;</code>
     */
    protected $floating_coupon_flag = false;
    /**
     *Признак бессрочной облигации.
     *
     * Generated from protobuf field <code>bool perpetual_flag = 36;</code>
     */
    protected $perpetual_flag = false;
    /**
     *Признак облигации с амортизацией долга.
     *
     * Generated from protobuf field <code>bool amortization_flag = 37;</code>
     */
    protected $amortization_flag = false;
    /**
     *Шаг цены.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.Quotation min_price_increment = 38;</code>
     */
    protected $min_price_increment = null;
    /**
     *Параметр указывает на возможность торговать инструментом через API.
     *
     * Generated from protobuf field <code>bool api_trade_available_flag = 39;</code>
     */
    protected $api_trade_available_flag = false;
    /**
     *Уникальный идентификатор инструмента.
     *
     * Generated from protobuf field <code>string uid = 40;</code>
     */
    protected $uid = '';
    /**
     *Реальная площадка исполнения расчетов. (биржа)
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.RealExchange real_exchange = 41;</code>
     */
    protected $real_exchange = 0;
    /**
     *Уникальный идентификатор позиции инструмента.
     *
     * Generated from protobuf field <code>string position_uid = 42;</code>
     */
    protected $position_uid = '';
    /**
     *Уникальный идентификатор актива.
     *
     * Generated from protobuf field <code>string asset_uid = 43;</code>
     */
    protected $asset_uid = '';
    /**
     *Признак доступности для ИИС.
     *
     * Generated from protobuf field <code>bool for_iis_flag = 51;</code>
     */
    protected $for_iis_flag = false;
    /**
     *Флаг, отображающий доступность торговли инструментом только для квалифицированных инвесторов.
     *
     * Generated from protobuf field <code>bool for_qual_investor_flag = 52;</code>
     */
    protected $for_qual_investor_flag = false;
    /**
     *Флаг, отображающий доступность торговли инструментом по выходным.
     *
     * Generated from protobuf field <code>bool weekend_flag = 53;</code>
     */
    protected $weekend_flag = false;
    /**
     *Флаг заблокированного ТКС.
     *
     * Generated from protobuf field <code>bool blocked_tca_flag = 54;</code>
     */
    protected $blocked_tca_flag = false;
    /**
     *Признак субординированной облигации.
     *
     * Generated from protobuf field <code>bool subordinated_flag = 55;</code>
     */
    protected $subordinated_flag = false;
    /**
     *Флаг достаточной ликвидности.
     *
     * Generated from protobuf field <code>bool liquidity_flag = 56;</code>
     */
    protected $liquidity_flag = false;
    /**
     *Дата первой минутной свечи.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp first_1min_candle_date = 61;</code>
     */
    protected $first_1min_candle_date = null;
    /**
     *Дата первой дневной свечи.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp first_1day_candle_date = 62;</code>
     */
    protected $first_1day_candle_date = null;
    /**
     *Уровень риска.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.RiskLevel risk_level = 63;</code>
     */
    protected $risk_level = 0;
    /**
     * Информация о бренде.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.BrandData brand = 64;</code>
     */
    protected $brand = null;
    /**
     * Тип облигации.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.BondType bond_type = 65;</code>
     */
    protected $bond_type = 0;
    /**
     * Дата погашения облигации.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp call_date = 69;</code>
     */
    protected $call_date = null;
    /**
     *Ставка риска в лонг с учетом текущего уровня риска портфеля клиента. [Подробнее про ставки риска](https://www.tbank.ru/invest/help/brokerage/account/margin/about/#q5).
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.Quotation dlong_client = 90;</code>
     */
    protected $dlong_client = null;
    /**
     *Ставка риска в шорт с учетом текущего уровня риска портфеля клиента. [Подробнее про ставки риска](https://www.tbank.ru/invest/help/brokerage/account/margin/about/#q5).
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.Quotation dshort_client = 91;</code>
     */
    protected $dshort_client = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $figi
     *          FIGI-идентификатор инструмента.
     *     @type string $ticker
     *          Тикер инструмента.
     *     @type string $class_code
     *          Класс-код (секция торгов).
     *     @type string $isin
     *          ISIN-идентификатор инструмента.
     *     @type int $lot
     *          Лотность инструмента. Возможно совершение операций только на количества ценной бумаги, кратные параметру `lot`. [Подробнее](./glossary#lot).
     *     @type string $currency
     *          Валюта расчетов.
     *     @type \Tinkoff\Invest\V1\Quotation $klong
     *          Коэффициент ставки риска длинной позиции по клиенту. 2 – клиент со стандартным уровнем риска (КСУР); 1 – клиент с повышенным уровнем риска (КПУР).
     *     @type \Tinkoff\Invest\V1\Quotation $kshort
     *          Коэффициент ставки риска короткой позиции по клиенту. 2 – клиент со стандартным уровнем риска (КСУР); 1 – клиент с повышенным уровнем риска (КПУР).
     *     @type \Tinkoff\Invest\V1\Quotation $dlong
     *          Ставка риска начальной маржи для КСУР лонг. [Подробнее про ставки риска](https://www.tbank.ru/invest/help/brokerage/account/margin/about/#q5).
     *     @type \Tinkoff\Invest\V1\Quotation $dshort
     *          Ставка риска начальной маржи для КСУР шорт. [Подробнее про ставки риска](https://www.tbank.ru/invest/help/brokerage/account/margin/about/#q5).
     *     @type \Tinkoff\Invest\V1\Quotation $dlong_min
     *           Ставка риска начальной маржи для КПУР лонг. [Подробнее про ставки риска](https://www.tbank.ru/invest/help/brokerage/account/margin/about/#q5).
     *     @type \Tinkoff\Invest\V1\Quotation $dshort_min
     *          Ставка риска начальной маржи для КПУР шорт. [Подробнее про ставки риска](https://www.tbank.ru/invest/help/brokerage/account/margin/about/#q5).
     *     @type bool $short_enabled_flag
     *          Признак доступности для операций в шорт.
     *     @type string $name
     *          Название инструмента.
     *     @type string $exchange
     *          Tорговая площадка (секция биржи).
     *     @type int $coupon_quantity_per_year
     *          Количество выплат по купонам в год.
     *     @type \Google\Protobuf\Timestamp $maturity_date
     *          Дата погашения облигации по UTC.
     *     @type \Tinkoff\Invest\V1\MoneyValue $nominal
     *          Номинал облигации.
     *     @type \Tinkoff\Invest\V1\MoneyValue $initial_nominal
     *          Первоначальный номинал облигации.
     *     @type \Google\Protobuf\Timestamp $state_reg_date
     *          Дата выпуска облигации по UTC.
     *     @type \Google\Protobuf\Timestamp $placement_date
     *          Дата размещения по UTC.
     *     @type \Tinkoff\Invest\V1\MoneyValue $placement_price
     *          Цена размещения.
     *     @type \Tinkoff\Invest\V1\MoneyValue $aci_value
     *          Значение НКД (накопленного купонного дохода) на дату.
     *     @type string $country_of_risk
     *          Код страны риска — то есть страны, в которой компания ведет основной бизнес.
     *     @type string $country_of_risk_name
     *          Наименование страны риска — то есть страны, в которой компания ведет основной бизнес.
     *     @type string $sector
     *          Сектор экономики.
     *     @type string $issue_kind
     *          Форма выпуска. Возможные значения: <br/>**documentary** — документарная; <br/>**non_documentary** — бездокументарная.
     *     @type int|string $issue_size
     *          Размер выпуска.
     *     @type int|string $issue_size_plan
     *          Плановый размер выпуска.
     *     @type int $trading_status
     *          Текущий режим торгов инструмента.
     *     @type bool $otc_flag
     *          Флаг, используемый ранее для определения внебиржевых инструментов. На данный момент не используется для торгуемых через API инструментов. Может использоваться как фильтр для операций, совершавшихся некоторое время назад на ОТС площадке.
     *     @type bool $buy_available_flag
     *          Признак доступности для покупки.
     *     @type bool $sell_available_flag
     *          Признак доступности для продажи.
     *     @type bool $floating_coupon_flag
     *          Признак облигации с плавающим купоном.
     *     @type bool $perpetual_flag
     *          Признак бессрочной облигации.
     *     @type bool $amortization_flag
     *          Признак облигации с амортизацией долга.
     *     @type \Tinkoff\Invest\V1\Quotation $min_price_increment
     *          Шаг цены.
     *     @type bool $api_trade_available_flag
     *          Параметр указывает на возможность торговать инструментом через API.
     *     @type string $uid
     *          Уникальный идентификатор инструмента.
     *     @type int $real_exchange
     *          Реальная площадка исполнения расчетов. (биржа)
     *     @type string $position_uid
     *          Уникальный идентификатор позиции инструмента.
     *     @type string $asset_uid
     *          Уникальный идентификатор актива.
     *     @type bool $for_iis_flag
     *          Признак доступности для ИИС.
     *     @type bool $for_qual_investor_flag
     *          Флаг, отображающий доступность торговли инструментом только для квалифицированных инвесторов.
     *     @type bool $weekend_flag
     *          Флаг, отображающий доступность торговли инструментом по выходным.
     *     @type bool $blocked_tca_flag
     *          Флаг заблокированного ТКС.
     *     @type bool $subordinated_flag
     *          Признак субординированной облигации.
     *     @type bool $liquidity_flag
     *          Флаг достаточной ликвидности.
     *     @type \Google\Protobuf\Timestamp $first_1min_candle_date
     *          Дата первой минутной свечи.
     *     @type \Google\Protobuf\Timestamp $first_1day_candle_date
     *          Дата первой дневной свечи.
     *     @type int $risk_level
     *          Уровень риска.
     *     @type \Tinkoff\Invest\V1\BrandData $brand
     *           Информация о бренде.
     *     @type int $bond_type
     *           Тип облигации.
     *     @type \Google\Protobuf\Timestamp $call_date
     *           Дата погашения облигации.
     *     @type \Tinkoff\Invest\V1\Quotation $dlong_client
     *          Ставка риска в лонг с учетом текущего уровня риска портфеля клиента. [Подробнее про ставки риска](https://www.tbank.ru/invest/help/brokerage/account/margin/about/#q5).
     *     @type \Tinkoff\Invest\V1\Quotation $dshort_client
     *          Ставка риска в шорт с учетом текущего уровня риска портфеля клиента. [Подробнее про ставки риска](https://www.tbank.ru/invest/help/brokerage/account/margin/about/#q5).
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Instruments::initOnce();
        parent::__construct($data);
    }

    /**
     *FIGI-идентификатор инструмента.
     *
     * Generated from protobuf field <code>string figi = 1;</code>
     * @return string
     */
    public function getFigi()
    {
        return $this->figi;
    }

    /**
     *FIGI-идентификатор инструмента.
     *
     * Generated from protobuf field <code>string figi = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setFigi($var)
    {
        GPBUtil::checkString($var, True);
        $this->figi = $var;

        return $this;
    }

    /**
     *Тикер инструмента.
     *
     * Generated from protobuf field <code>string ticker = 2;</code>
     * @return string
     */
    public function getTicker()
    {
        return $this->ticker;
    }

    /**
     *Тикер инструмента.
     *
     * Generated from protobuf field <code>string ticker = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setTicker($var)
    {
        GPBUtil::checkString($var, True);
        $this->ticker = $var;

        return $this;
    }

    /**
     *Класс-код (секция торгов).
     *
     * Generated from protobuf field <code>string class_code = 3;</code>
     * @return string
     */
    public function getClassCode()
    {
        return $this->class_code;
    }

    /**
     *Класс-код (секция торгов).
     *
     * Generated from protobuf field <code>string class_code = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setClassCode($var)
    {
        GPBUtil::checkString($var, True);
        $this->class_code = $var;

        return $this;
    }

    /**
     *ISIN-идентификатор инструмента.
     *
     * Generated from protobuf field <code>string isin = 4;</code>
     * @return string
     */
    public function getIsin()
    {
        return $this->isin;
    }

    /**
     *ISIN-идентификатор инструмента.
     *
     * Generated from protobuf field <code>string isin = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setIsin($var)
    {
        GPBUtil::checkString($var, True);
        $this->isin = $var;

        return $this;
    }

    /**
     *Лотность инструмента. Возможно совершение операций только на количества ценной бумаги, кратные параметру `lot`. [Подробнее](./glossary#lot).
     *
     * Generated from protobuf field <code>int32 lot = 5;</code>
     * @return int
     */
    public function getLot()
    {
        return $this->lot;
    }

    /**
     *Лотность инструмента. Возможно совершение операций только на количества ценной бумаги, кратные параметру `lot`. [Подробнее](./glossary#lot).
     *
     * Generated from protobuf field <code>int32 lot = 5;</code>
     * @param int $var
     * @return $this
     */
    public function setLot($var)
    {
        GPBUtil::checkInt32($var);
        $this->lot = $var;

        return $this;
    }

    /**
     *Валюта расчетов.
     *
     * Generated from protobuf field <code>string currency = 6;</code>
     * @return string
     */
    public function getCurrency()
    {
        return $this->currency;
    }

    /**
     *Валюта расчетов.
     *
     * Generated from protobuf field <code>string currency = 6;</code>
     * @param string $var
     * @return $this
     */
    public function setCurrency($var)
    {
        GPBUtil::checkString($var, True);
        $this->currency = $var;

        return $this;
    }

    /**
     *Коэффициент ставки риска длинной позиции по клиенту. 2 – клиент со стандартным уровнем риска (КСУР); 1 – клиент с повышенным уровнем риска (КПУР).
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.Quotation klong = 7 [deprecated = true];</code>
     * @return \Tinkoff\Invest\V1\Quotation|null
     * @deprecated
     */
    public function getKlong()
    {
        @trigger_error('klong is deprecated.', E_USER_DEPRECATED);
        return $this->klong;
    }

    public function hasKlong()
    {
        @trigger_error('klong is deprecated.', E_USER_DEPRECATED);
        return isset($this->klong);
    }

    public function clearKlong()
    {
        @trigger_error('klong is deprecated.', E_USER_DEPRECATED);
        unset($this->klong);
    }

    /**
     *Коэффициент ставки риска длинной позиции по клиенту. 2 – клиент со стандартным уровнем риска (КСУР); 1 – клиент с повышенным уровнем риска (КПУР).
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.Quotation klong = 7 [deprecated = true];</code>
     * @param \Tinkoff\Invest\V1\Quotation $var
     * @return $this
     * @deprecated
     */
    public function setKlong($var)
    {
        @trigger_error('klong is deprecated.', E_USER_DEPRECATED);
        GPBUtil::checkMessage($var, \Tinkoff\Invest\V1\Quotation::class);
        $this->klong = $var;

        return $this;
    }

    /**
     *Коэффициент ставки риска короткой позиции по клиенту. 2 – клиент со стандартным уровнем риска (КСУР); 1 – клиент с повышенным уровнем риска (КПУР).
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.Quotation kshort = 8 [deprecated = true];</code>
     * @return \Tinkoff\Invest\V1\Quotation|null
     * @deprecated
     */
    public function getKshort()
    {
        @trigger_error('kshort is deprecated.', E_USER_DEPRECATED);
        return $this->kshort;
    }

    public function hasKshort()
    {
        @trigger_error('kshort is deprecated.', E_USER_DEPRECATED);
        return isset($this->kshort);
    }

    public function clearKshort()
    {
        @trigger_error('kshort is deprecated.', E_USER_DEPRECATED);
        unset($this->kshort);
    }

    /**
     *Коэффициент ставки риска короткой позиции по клиенту. 2 – клиент со стандартным уровнем риска (КСУР); 1 – клиент с повышенным уровнем риска (КПУР).
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.Quotation kshort = 8 [deprecated = true];</code>
     * @param \Tinkoff\Invest\V1\Quotation $var
     * @return $this
     * @deprecated
     */
    public function setKshort($var)
    {
        @trigger_error('kshort is deprecated.', E_USER_DEPRECATED);
        GPBUtil::checkMessage($var, \Tinkoff\Invest\V1\Quotation::class);
        $this->kshort = $var;

        return $this;
    }

    /**
     *Ставка риска начальной маржи для КСУР лонг. [Подробнее про ставки риска](https://www.tbank.ru/invest/help/brokerage/account/margin/about/#q5).
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.Quotation dlong = 9;</code>
     * @return \Tinkoff\Invest\V1\Quotation|null
     */
    public function getDlong()
    {
        return $this->dlong;
    }

    public function hasDlong()
    {
        return isset($this->dlong);
    }

    public function clearDlong()
    {
        unset($this->dlong);
    }

    /**
     *Ставка риска начальной маржи для КСУР лонг. [Подробнее про ставки риска](https://www.tbank.ru/invest/help/brokerage/account/margin/about/#q5).
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.Quotation dlong = 9;</code>
     * @param \Tinkoff\Invest\V1\Quotation $var
     * @return $this
     */
    public function setDlong($var)
    {
        GPBUtil::checkMessage($var, \Tinkoff\Invest\V1\Quotation::class);
        $this->dlong = $var;

        return $this;
    }

    /**
     *Ставка риска начальной маржи для КСУР шорт. [Подробнее про ставки риска](https://www.tbank.ru/invest/help/brokerage/account/margin/about/#q5).
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.Quotation dshort = 10;</code>
     * @return \Tinkoff\Invest\V1\Quotation|null
     */
    public function getDshort()
    {
        return $this->dshort;
    }

    public function hasDshort()
    {
        return isset($this->dshort);
    }

    public function clearDshort()
    {
        unset($this->dshort);
    }

    /**
     *Ставка риска начальной маржи для КСУР шорт. [Подробнее про ставки риска](https://www.tbank.ru/invest/help/brokerage/account/margin/about/#q5).
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.Quotation dshort = 10;</code>
     * @param \Tinkoff\Invest\V1\Quotation $var
     * @return $this
     */
    public function setDshort($var)
    {
        GPBUtil::checkMessage($var, \Tinkoff\Invest\V1\Quotation::class);
        $this->dshort = $var;

        return $this;
    }

    /**
     * Ставка риска начальной маржи для КПУР лонг. [Подробнее про ставки риска](https://www.tbank.ru/invest/help/brokerage/account/margin/about/#q5).
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.Quotation dlong_min = 11;</code>
     * @return \Tinkoff\Invest\V1\Quotation|null
     */
    public function getDlongMin()
    {
        return $this->dlong_min;
    }

    public function hasDlongMin()
    {
        return isset($this->dlong_min);
    }

    public function clearDlongMin()
    {
        unset($this->dlong_min);
    }

    /**
     * Ставка риска начальной маржи для КПУР лонг. [Подробнее про ставки риска](https://www.tbank.ru/invest/help/brokerage/account/margin/about/#q5).
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.Quotation dlong_min = 11;</code>
     * @param \Tinkoff\Invest\V1\Quotation $var
     * @return $this
     */
    public function setDlongMin($var)
    {
        GPBUtil::checkMessage($var, \Tinkoff\Invest\V1\Quotation::class);
        $this->dlong_min = $var;

        return $this;
    }

    /**
     *Ставка риска начальной маржи для КПУР шорт. [Подробнее про ставки риска](https://www.tbank.ru/invest/help/brokerage/account/margin/about/#q5).
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.Quotation dshort_min = 12;</code>
     * @return \Tinkoff\Invest\V1\Quotation|null
     */
    public function getDshortMin()
    {
        return $this->dshort_min;
    }

    public function hasDshortMin()
    {
        return isset($this->dshort_min);
    }

    public function clearDshortMin()
    {
        unset($this->dshort_min);
    }

    /**
     *Ставка риска начальной маржи для КПУР шорт. [Подробнее про ставки риска](https://www.tbank.ru/invest/help/brokerage/account/margin/about/#q5).
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.Quotation dshort_min = 12;</code>
     * @param \Tinkoff\Invest\V1\Quotation $var
     * @return $this
     */
    public function setDshortMin($var)
    {
        GPBUtil::checkMessage($var, \Tinkoff\Invest\V1\Quotation::class);
        $this->dshort_min = $var;

        return $this;
    }

    /**
     *Признак доступности для операций в шорт.
     *
     * Generated from protobuf field <code>bool short_enabled_flag = 13;</code>
     * @return bool
     */
    public function getShortEnabledFlag()
    {
        return $this->short_enabled_flag;
    }

    /**
     *Признак доступности для операций в шорт.
     *
     * Generated from protobuf field <code>bool short_enabled_flag = 13;</code>
     * @param bool $var
     * @return $this
     */
    public function setShortEnabledFlag($var)
    {
        GPBUtil::checkBool($var);
        $this->short_enabled_flag = $var;

        return $this;
    }

    /**
     *Название инструмента.
     *
     * Generated from protobuf field <code>string name = 15;</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     *Название инструмента.
     *
     * Generated from protobuf field <code>string name = 15;</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     *Tорговая площадка (секция биржи).
     *
     * Generated from protobuf field <code>string exchange = 16;</code>
     * @return string
     */
    public function getExchange()
    {
        return $this->exchange;
    }

    /**
     *Tорговая площадка (секция биржи).
     *
     * Generated from protobuf field <code>string exchange = 16;</code>
     * @param string $var
     * @return $this
     */
    public function setExchange($var)
    {
        GPBUtil::checkString($var, True);
        $this->exchange = $var;

        return $this;
    }

    /**
     *Количество выплат по купонам в год.
     *
     * Generated from protobuf field <code>int32 coupon_quantity_per_year = 17;</code>
     * @return int
     */
    public function getCouponQuantityPerYear()
    {
        return $this->coupon_quantity_per_year;
    }

    /**
     *Количество выплат по купонам в год.
     *
     * Generated from protobuf field <code>int32 coupon_quantity_per_year = 17;</code>
     * @param int $var
     * @return $this
     */
    public function setCouponQuantityPerYear($var)
    {
        GPBUtil::checkInt32($var);
        $this->coupon_quantity_per_year = $var;

        return $this;
    }

    /**
     *Дата погашения облигации по UTC.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp maturity_date = 18;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getMaturityDate()
    {
        return $this->maturity_date;
    }

    public function hasMaturityDate()
    {
        return isset($this->maturity_date);
    }

    public function clearMaturityDate()
    {
        unset($this->maturity_date);
    }

    /**
     *Дата погашения облигации по UTC.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp maturity_date = 18;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setMaturityDate($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->maturity_date = $var;

        return $this;
    }

    /**
     *Номинал облигации.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.MoneyValue nominal = 19;</code>
     * @return \Tinkoff\Invest\V1\MoneyValue|null
     */
    public function getNominal()
    {
        return $this->nominal;
    }

    public function hasNominal()
    {
        return isset($this->nominal);
    }

    public function clearNominal()
    {
        unset($this->nominal);
    }

    /**
     *Номинал облигации.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.MoneyValue nominal = 19;</code>
     * @param \Tinkoff\Invest\V1\MoneyValue $var
     * @return $this
     */
    public function setNominal($var)
    {
        GPBUtil::checkMessage($var, \Tinkoff\Invest\V1\MoneyValue::class);
        $this->nominal = $var;

        return $this;
    }

    /**
     *Первоначальный номинал облигации.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.MoneyValue initial_nominal = 20;</code>
     * @return \Tinkoff\Invest\V1\MoneyValue|null
     */
    public function getInitialNominal()
    {
        return $this->initial_nominal;
    }

    public function hasInitialNominal()
    {
        return isset($this->initial_nominal);
    }

    public function clearInitialNominal()
    {
        unset($this->initial_nominal);
    }

    /**
     *Первоначальный номинал облигации.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.MoneyValue initial_nominal = 20;</code>
     * @param \Tinkoff\Invest\V1\MoneyValue $var
     * @return $this
     */
    public function setInitialNominal($var)
    {
        GPBUtil::checkMessage($var, \Tinkoff\Invest\V1\MoneyValue::class);
        $this->initial_nominal = $var;

        return $this;
    }

    /**
     *Дата выпуска облигации по UTC.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp state_reg_date = 21;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getStateRegDate()
    {
        return $this->state_reg_date;
    }

    public function hasStateRegDate()
    {
        return isset($this->state_reg_date);
    }

    public function clearStateRegDate()
    {
        unset($this->state_reg_date);
    }

    /**
     *Дата выпуска облигации по UTC.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp state_reg_date = 21;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setStateRegDate($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->state_reg_date = $var;

        return $this;
    }

    /**
     *Дата размещения по UTC.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp placement_date = 22;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getPlacementDate()
    {
        return $this->placement_date;
    }

    public function hasPlacementDate()
    {
        return isset($this->placement_date);
    }

    public function clearPlacementDate()
    {
        unset($this->placement_date);
    }

    /**
     *Дата размещения по UTC.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp placement_date = 22;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setPlacementDate($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->placement_date = $var;

        return $this;
    }

    /**
     *Цена размещения.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.MoneyValue placement_price = 23;</code>
     * @return \Tinkoff\Invest\V1\MoneyValue|null
     */
    public function getPlacementPrice()
    {
        return $this->placement_price;
    }

    public function hasPlacementPrice()
    {
        return isset($this->placement_price);
    }

    public function clearPlacementPrice()
    {
        unset($this->placement_price);
    }

    /**
     *Цена размещения.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.MoneyValue placement_price = 23;</code>
     * @param \Tinkoff\Invest\V1\MoneyValue $var
     * @return $this
     */
    public function setPlacementPrice($var)
    {
        GPBUtil::checkMessage($var, \Tinkoff\Invest\V1\MoneyValue::class);
        $this->placement_price = $var;

        return $this;
    }

    /**
     *Значение НКД (накопленного купонного дохода) на дату.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.MoneyValue aci_value = 24;</code>
     * @return \Tinkoff\Invest\V1\MoneyValue|null
     */
    public function getAciValue()
    {
        return $this->aci_value;
    }

    public function hasAciValue()
    {
        return isset($this->aci_value);
    }

    public function clearAciValue()
    {
        unset($this->aci_value);
    }

    /**
     *Значение НКД (накопленного купонного дохода) на дату.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.MoneyValue aci_value = 24;</code>
     * @param \Tinkoff\Invest\V1\MoneyValue $var
     * @return $this
     */
    public function setAciValue($var)
    {
        GPBUtil::checkMessage($var, \Tinkoff\Invest\V1\MoneyValue::class);
        $this->aci_value = $var;

        return $this;
    }

    /**
     *Код страны риска — то есть страны, в которой компания ведет основной бизнес.
     *
     * Generated from protobuf field <code>string country_of_risk = 25;</code>
     * @return string
     */
    public function getCountryOfRisk()
    {
        return $this->country_of_risk;
    }

    /**
     *Код страны риска — то есть страны, в которой компания ведет основной бизнес.
     *
     * Generated from protobuf field <code>string country_of_risk = 25;</code>
     * @param string $var
     * @return $this
     */
    public function setCountryOfRisk($var)
    {
        GPBUtil::checkString($var, True);
        $this->country_of_risk = $var;

        return $this;
    }

    /**
     *Наименование страны риска — то есть страны, в которой компания ведет основной бизнес.
     *
     * Generated from protobuf field <code>string country_of_risk_name = 26;</code>
     * @return string
     */
    public function getCountryOfRiskName()
    {
        return $this->country_of_risk_name;
    }

    /**
     *Наименование страны риска — то есть страны, в которой компания ведет основной бизнес.
     *
     * Generated from protobuf field <code>string country_of_risk_name = 26;</code>
     * @param string $var
     * @return $this
     */
    public function setCountryOfRiskName($var)
    {
        GPBUtil::checkString($var, True);
        $this->country_of_risk_name = $var;

        return $this;
    }

    /**
     *Сектор экономики.
     *
     * Generated from protobuf field <code>string sector = 27;</code>
     * @return string
     */
    public function getSector()
    {
        return $this->sector;
    }

    /**
     *Сектор экономики.
     *
     * Generated from protobuf field <code>string sector = 27;</code>
     * @param string $var
     * @return $this
     */
    public function setSector($var)
    {
        GPBUtil::checkString($var, True);
        $this->sector = $var;

        return $this;
    }

    /**
     *Форма выпуска. Возможные значения: <br/>**documentary** — документарная; <br/>**non_documentary** — бездокументарная.
     *
     * Generated from protobuf field <code>string issue_kind = 28;</code>
     * @return string
     */
    public function getIssueKind()
    {
        return $this->issue_kind;
    }

    /**
     *Форма выпуска. Возможные значения: <br/>**documentary** — документарная; <br/>**non_documentary** — бездокументарная.
     *
     * Generated from protobuf field <code>string issue_kind = 28;</code>
     * @param string $var
     * @return $this
     */
    public function setIssueKind($var)
    {
        GPBUtil::checkString($var, True);
        $this->issue_kind = $var;

        return $this;
    }

    /**
     *Размер выпуска.
     *
     * Generated from protobuf field <code>int64 issue_size = 29;</code>
     * @return int|string
     */
    public function getIssueSize()
    {
        return $this->issue_size;
    }

    /**
     *Размер выпуска.
     *
     * Generated from protobuf field <code>int64 issue_size = 29;</code>
     * @param int|string $var
     * @return $this
     */
    public function setIssueSize($var)
    {
        GPBUtil::checkInt64($var);
        $this->issue_size = $var;

        return $this;
    }

    /**
     *Плановый размер выпуска.
     *
     * Generated from protobuf field <code>int64 issue_size_plan = 30;</code>
     * @return int|string
     */
    public function getIssueSizePlan()
    {
        return $this->issue_size_plan;
    }

    /**
     *Плановый размер выпуска.
     *
     * Generated from protobuf field <code>int64 issue_size_plan = 30;</code>
     * @param int|string $var
     * @return $this
     */
    public function setIssueSizePlan($var)
    {
        GPBUtil::checkInt64($var);
        $this->issue_size_plan = $var;

        return $this;
    }

    /**
     *Текущий режим торгов инструмента.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.SecurityTradingStatus trading_status = 31;</code>
     * @return int
     */
    public function getTradingStatus()
    {
        return $this->trading_status;
    }

    /**
     *Текущий режим торгов инструмента.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.SecurityTradingStatus trading_status = 31;</code>
     * @param int $var
     * @return $this
     */
    public function setTradingStatus($var)
    {
        GPBUtil::checkEnum($var, \Tinkoff\Invest\V1\SecurityTradingStatus::class);
        $this->trading_status = $var;

        return $this;
    }

    /**
     *Флаг, используемый ранее для определения внебиржевых инструментов. На данный момент не используется для торгуемых через API инструментов. Может использоваться как фильтр для операций, совершавшихся некоторое время назад на ОТС площадке.
     *
     * Generated from protobuf field <code>bool otc_flag = 32;</code>
     * @return bool
     */
    public function getOtcFlag()
    {
        return $this->otc_flag;
    }

    /**
     *Флаг, используемый ранее для определения внебиржевых инструментов. На данный момент не используется для торгуемых через API инструментов. Может использоваться как фильтр для операций, совершавшихся некоторое время назад на ОТС площадке.
     *
     * Generated from protobuf field <code>bool otc_flag = 32;</code>
     * @param bool $var
     * @return $this
     */
    public function setOtcFlag($var)
    {
        GPBUtil::checkBool($var);
        $this->otc_flag = $var;

        return $this;
    }

    /**
     *Признак доступности для покупки.
     *
     * Generated from protobuf field <code>bool buy_available_flag = 33;</code>
     * @return bool
     */
    public function getBuyAvailableFlag()
    {
        return $this->buy_available_flag;
    }

    /**
     *Признак доступности для покупки.
     *
     * Generated from protobuf field <code>bool buy_available_flag = 33;</code>
     * @param bool $var
     * @return $this
     */
    public function setBuyAvailableFlag($var)
    {
        GPBUtil::checkBool($var);
        $this->buy_available_flag = $var;

        return $this;
    }

    /**
     *Признак доступности для продажи.
     *
     * Generated from protobuf field <code>bool sell_available_flag = 34;</code>
     * @return bool
     */
    public function getSellAvailableFlag()
    {
        return $this->sell_available_flag;
    }

    /**
     *Признак доступности для продажи.
     *
     * Generated from protobuf field <code>bool sell_available_flag = 34;</code>
     * @param bool $var
     * @return $this
     */
    public function setSellAvailableFlag($var)
    {
        GPBUtil::checkBool($var);
        $this->sell_available_flag = $var;

        return $this;
    }

    /**
     *Признак облигации с плавающим купоном.
     *
     * Generated from protobuf field <code>bool floating_coupon_flag = 35;</code>
     * @return bool
     */
    public function getFloatingCouponFlag()
    {
        return $this->floating_coupon_flag;
    }

    /**
     *Признак облигации с плавающим купоном.
     *
     * Generated from protobuf field <code>bool floating_coupon_flag = 35;</code>
     * @param bool $var
     * @return $this
     */
    public function setFloatingCouponFlag($var)
    {
        GPBUtil::checkBool($var);
        $this->floating_coupon_flag = $var;

        return $this;
    }

    /**
     *Признак бессрочной облигации.
     *
     * Generated from protobuf field <code>bool perpetual_flag = 36;</code>
     * @return bool
     */
    public function getPerpetualFlag()
    {
        return $this->perpetual_flag;
    }

    /**
     *Признак бессрочной облигации.
     *
     * Generated from protobuf field <code>bool perpetual_flag = 36;</code>
     * @param bool $var
     * @return $this
     */
    public function setPerpetualFlag($var)
    {
        GPBUtil::checkBool($var);
        $this->perpetual_flag = $var;

        return $this;
    }

    /**
     *Признак облигации с амортизацией долга.
     *
     * Generated from protobuf field <code>bool amortization_flag = 37;</code>
     * @return bool
     */
    public function getAmortizationFlag()
    {
        return $this->amortization_flag;
    }

    /**
     *Признак облигации с амортизацией долга.
     *
     * Generated from protobuf field <code>bool amortization_flag = 37;</code>
     * @param bool $var
     * @return $this
     */
    public function setAmortizationFlag($var)
    {
        GPBUtil::checkBool($var);
        $this->amortization_flag = $var;

        return $this;
    }

    /**
     *Шаг цены.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.Quotation min_price_increment = 38;</code>
     * @return \Tinkoff\Invest\V1\Quotation|null
     */
    public function getMinPriceIncrement()
    {
        return $this->min_price_increment;
    }

    public function hasMinPriceIncrement()
    {
        return isset($this->min_price_increment);
    }

    public function clearMinPriceIncrement()
    {
        unset($this->min_price_increment);
    }

    /**
     *Шаг цены.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.Quotation min_price_increment = 38;</code>
     * @param \Tinkoff\Invest\V1\Quotation $var
     * @return $this
     */
    public function setMinPriceIncrement($var)
    {
        GPBUtil::checkMessage($var, \Tinkoff\Invest\V1\Quotation::class);
        $this->min_price_increment = $var;

        return $this;
    }

    /**
     *Параметр указывает на возможность торговать инструментом через API.
     *
     * Generated from protobuf field <code>bool api_trade_available_flag = 39;</code>
     * @return bool
     */
    public function getApiTradeAvailableFlag()
    {
        return $this->api_trade_available_flag;
    }

    /**
     *Параметр указывает на возможность торговать инструментом через API.
     *
     * Generated from protobuf field <code>bool api_trade_available_flag = 39;</code>
     * @param bool $var
     * @return $this
     */
    public function setApiTradeAvailableFlag($var)
    {
        GPBUtil::checkBool($var);
        $this->api_trade_available_flag = $var;

        return $this;
    }

    /**
     *Уникальный идентификатор инструмента.
     *
     * Generated from protobuf field <code>string uid = 40;</code>
     * @return string
     */
    public function getUid()
    {
        return $this->uid;
    }

    /**
     *Уникальный идентификатор инструмента.
     *
     * Generated from protobuf field <code>string uid = 40;</code>
     * @param string $var
     * @return $this
     */
    public function setUid($var)
    {
        GPBUtil::checkString($var, True);
        $this->uid = $var;

        return $this;
    }

    /**
     *Реальная площадка исполнения расчетов. (биржа)
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.RealExchange real_exchange = 41;</code>
     * @return int
     */
    public function getRealExchange()
    {
        return $this->real_exchange;
    }

    /**
     *Реальная площадка исполнения расчетов. (биржа)
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.RealExchange real_exchange = 41;</code>
     * @param int $var
     * @return $this
     */
    public function setRealExchange($var)
    {
        GPBUtil::checkEnum($var, \Tinkoff\Invest\V1\RealExchange::class);
        $this->real_exchange = $var;

        return $this;
    }

    /**
     *Уникальный идентификатор позиции инструмента.
     *
     * Generated from protobuf field <code>string position_uid = 42;</code>
     * @return string
     */
    public function getPositionUid()
    {
        return $this->position_uid;
    }

    /**
     *Уникальный идентификатор позиции инструмента.
     *
     * Generated from protobuf field <code>string position_uid = 42;</code>
     * @param string $var
     * @return $this
     */
    public function setPositionUid($var)
    {
        GPBUtil::checkString($var, True);
        $this->position_uid = $var;

        return $this;
    }

    /**
     *Уникальный идентификатор актива.
     *
     * Generated from protobuf field <code>string asset_uid = 43;</code>
     * @return string
     */
    public function getAssetUid()
    {
        return $this->asset_uid;
    }

    /**
     *Уникальный идентификатор актива.
     *
     * Generated from protobuf field <code>string asset_uid = 43;</code>
     * @param string $var
     * @return $this
     */
    public function setAssetUid($var)
    {
        GPBUtil::checkString($var, True);
        $this->asset_uid = $var;

        return $this;
    }

    /**
     *Признак доступности для ИИС.
     *
     * Generated from protobuf field <code>bool for_iis_flag = 51;</code>
     * @return bool
     */
    public function getForIisFlag()
    {
        return $this->for_iis_flag;
    }

    /**
     *Признак доступности для ИИС.
     *
     * Generated from protobuf field <code>bool for_iis_flag = 51;</code>
     * @param bool $var
     * @return $this
     */
    public function setForIisFlag($var)
    {
        GPBUtil::checkBool($var);
        $this->for_iis_flag = $var;

        return $this;
    }

    /**
     *Флаг, отображающий доступность торговли инструментом только для квалифицированных инвесторов.
     *
     * Generated from protobuf field <code>bool for_qual_investor_flag = 52;</code>
     * @return bool
     */
    public function getForQualInvestorFlag()
    {
        return $this->for_qual_investor_flag;
    }

    /**
     *Флаг, отображающий доступность торговли инструментом только для квалифицированных инвесторов.
     *
     * Generated from protobuf field <code>bool for_qual_investor_flag = 52;</code>
     * @param bool $var
     * @return $this
     */
    public function setForQualInvestorFlag($var)
    {
        GPBUtil::checkBool($var);
        $this->for_qual_investor_flag = $var;

        return $this;
    }

    /**
     *Флаг, отображающий доступность торговли инструментом по выходным.
     *
     * Generated from protobuf field <code>bool weekend_flag = 53;</code>
     * @return bool
     */
    public function getWeekendFlag()
    {
        return $this->weekend_flag;
    }

    /**
     *Флаг, отображающий доступность торговли инструментом по выходным.
     *
     * Generated from protobuf field <code>bool weekend_flag = 53;</code>
     * @param bool $var
     * @return $this
     */
    public function setWeekendFlag($var)
    {
        GPBUtil::checkBool($var);
        $this->weekend_flag = $var;

        return $this;
    }

    /**
     *Флаг заблокированного ТКС.
     *
     * Generated from protobuf field <code>bool blocked_tca_flag = 54;</code>
     * @return bool
     */
    public function getBlockedTcaFlag()
    {
        return $this->blocked_tca_flag;
    }

    /**
     *Флаг заблокированного ТКС.
     *
     * Generated from protobuf field <code>bool blocked_tca_flag = 54;</code>
     * @param bool $var
     * @return $this
     */
    public function setBlockedTcaFlag($var)
    {
        GPBUtil::checkBool($var);
        $this->blocked_tca_flag = $var;

        return $this;
    }

    /**
     *Признак субординированной облигации.
     *
     * Generated from protobuf field <code>bool subordinated_flag = 55;</code>
     * @return bool
     */
    public function getSubordinatedFlag()
    {
        return $this->subordinated_flag;
    }

    /**
     *Признак субординированной облигации.
     *
     * Generated from protobuf field <code>bool subordinated_flag = 55;</code>
     * @param bool $var
     * @return $this
     */
    public function setSubordinatedFlag($var)
    {
        GPBUtil::checkBool($var);
        $this->subordinated_flag = $var;

        return $this;
    }

    /**
     *Флаг достаточной ликвидности.
     *
     * Generated from protobuf field <code>bool liquidity_flag = 56;</code>
     * @return bool
     */
    public function getLiquidityFlag()
    {
        return $this->liquidity_flag;
    }

    /**
     *Флаг достаточной ликвидности.
     *
     * Generated from protobuf field <code>bool liquidity_flag = 56;</code>
     * @param bool $var
     * @return $this
     */
    public function setLiquidityFlag($var)
    {
        GPBUtil::checkBool($var);
        $this->liquidity_flag = $var;

        return $this;
    }

    /**
     *Дата первой минутной свечи.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp first_1min_candle_date = 61;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getFirst1MinCandleDate()
    {
        return $this->first_1min_candle_date;
    }

    public function hasFirst1MinCandleDate()
    {
        return isset($this->first_1min_candle_date);
    }

    public function clearFirst1MinCandleDate()
    {
        unset($this->first_1min_candle_date);
    }

    /**
     *Дата первой минутной свечи.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp first_1min_candle_date = 61;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setFirst1MinCandleDate($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->first_1min_candle_date = $var;

        return $this;
    }

    /**
     *Дата первой дневной свечи.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp first_1day_candle_date = 62;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getFirst1DayCandleDate()
    {
        return $this->first_1day_candle_date;
    }

    public function hasFirst1DayCandleDate()
    {
        return isset($this->first_1day_candle_date);
    }

    public function clearFirst1DayCandleDate()
    {
        unset($this->first_1day_candle_date);
    }

    /**
     *Дата первой дневной свечи.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp first_1day_candle_date = 62;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setFirst1DayCandleDate($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->first_1day_candle_date = $var;

        return $this;
    }

    /**
     *Уровень риска.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.RiskLevel risk_level = 63;</code>
     * @return int
     */
    public function getRiskLevel()
    {
        return $this->risk_level;
    }

    /**
     *Уровень риска.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.RiskLevel risk_level = 63;</code>
     * @param int $var
     * @return $this
     */
    public function setRiskLevel($var)
    {
        GPBUtil::checkEnum($var, \Tinkoff\Invest\V1\RiskLevel::class);
        $this->risk_level = $var;

        return $this;
    }

    /**
     * Информация о бренде.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.BrandData brand = 64;</code>
     * @return \Tinkoff\Invest\V1\BrandData|null
     */
    public function getBrand()
    {
        return $this->brand;
    }

    public function hasBrand()
    {
        return isset($this->brand);
    }

    public function clearBrand()
    {
        unset($this->brand);
    }

    /**
     * Информация о бренде.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.BrandData brand = 64;</code>
     * @param \Tinkoff\Invest\V1\BrandData $var
     * @return $this
     */
    public function setBrand($var)
    {
        GPBUtil::checkMessage($var, \Tinkoff\Invest\V1\BrandData::class);
        $this->brand = $var;

        return $this;
    }

    /**
     * Тип облигации.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.BondType bond_type = 65;</code>
     * @return int
     */
    public function getBondType()
    {
        return $this->bond_type;
    }

    /**
     * Тип облигации.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.BondType bond_type = 65;</code>
     * @param int $var
     * @return $this
     */
    public function setBondType($var)
    {
        GPBUtil::checkEnum($var, \Tinkoff\Invest\V1\BondType::class);
        $this->bond_type = $var;

        return $this;
    }

    /**
     * Дата погашения облигации.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp call_date = 69;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getCallDate()
    {
        return $this->call_date;
    }

    public function hasCallDate()
    {
        return isset($this->call_date);
    }

    public function clearCallDate()
    {
        unset($this->call_date);
    }

    /**
     * Дата погашения облигации.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp call_date = 69;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setCallDate($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->call_date = $var;

        return $this;
    }

    /**
     *Ставка риска в лонг с учетом текущего уровня риска портфеля клиента. [Подробнее про ставки риска](https://www.tbank.ru/invest/help/brokerage/account/margin/about/#q5).
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.Quotation dlong_client = 90;</code>
     * @return \Tinkoff\Invest\V1\Quotation|null
     */
    public function getDlongClient()
    {
        return $this->dlong_client;
    }

    public function hasDlongClient()
    {
        return isset($this->dlong_client);
    }

    public function clearDlongClient()
    {
        unset($this->dlong_client);
    }

    /**
     *Ставка риска в лонг с учетом текущего уровня риска портфеля клиента. [Подробнее про ставки риска](https://www.tbank.ru/invest/help/brokerage/account/margin/about/#q5).
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.Quotation dlong_client = 90;</code>
     * @param \Tinkoff\Invest\V1\Quotation $var
     * @return $this
     */
    public function setDlongClient($var)
    {
        GPBUtil::checkMessage($var, \Tinkoff\Invest\V1\Quotation::class);
        $this->dlong_client = $var;

        return $this;
    }

    /**
     *Ставка риска в шорт с учетом текущего уровня риска портфеля клиента. [Подробнее про ставки риска](https://www.tbank.ru/invest/help/brokerage/account/margin/about/#q5).
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.Quotation dshort_client = 91;</code>
     * @return \Tinkoff\Invest\V1\Quotation|null
     */
    public function getDshortClient()
    {
        return $this->dshort_client;
    }

    public function hasDshortClient()
    {
        return isset($this->dshort_client);
    }

    public function clearDshortClient()
    {
        unset($this->dshort_client);
    }

    /**
     *Ставка риска в шорт с учетом текущего уровня риска портфеля клиента. [Подробнее про ставки риска](https://www.tbank.ru/invest/help/brokerage/account/margin/about/#q5).
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.Quotation dshort_client = 91;</code>
     * @param \Tinkoff\Invest\V1\Quotation $var
     * @return $this
     */
    public function setDshortClient($var)
    {
        GPBUtil::checkMessage($var, \Tinkoff\Invest\V1\Quotation::class);
        $this->dshort_client = $var;

        return $this;
    }

}

