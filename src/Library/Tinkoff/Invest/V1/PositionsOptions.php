<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: operations.proto

namespace Tinkoff\Invest\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 *Баланс опциона.
 *
 * Generated from protobuf message <code>tinkoff.public.invest.api.contract.v1.PositionsOptions</code>
 */
class PositionsOptions extends \Google\Protobuf\Internal\Message
{
    /**
     *Уникальный идентификатор позиции опциона.
     *
     * Generated from protobuf field <code>string position_uid = 1;</code>
     */
    protected $position_uid = '';
    /**
     *Уникальный идентификатор  инструмента.
     *
     * Generated from protobuf field <code>string instrument_uid = 2;</code>
     */
    protected $instrument_uid = '';
    /**
     *Количество бумаг заблокированных выставленными заявками.
     *
     * Generated from protobuf field <code>int64 blocked = 11;</code>
     */
    protected $blocked = 0;
    /**
     *Текущий незаблокированный баланс.
     *
     * Generated from protobuf field <code>int64 balance = 21;</code>
     */
    protected $balance = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $position_uid
     *          Уникальный идентификатор позиции опциона.
     *     @type string $instrument_uid
     *          Уникальный идентификатор  инструмента.
     *     @type int|string $blocked
     *          Количество бумаг заблокированных выставленными заявками.
     *     @type int|string $balance
     *          Текущий незаблокированный баланс.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Operations::initOnce();
        parent::__construct($data);
    }

    /**
     *Уникальный идентификатор позиции опциона.
     *
     * Generated from protobuf field <code>string position_uid = 1;</code>
     * @return string
     */
    public function getPositionUid()
    {
        return $this->position_uid;
    }

    /**
     *Уникальный идентификатор позиции опциона.
     *
     * Generated from protobuf field <code>string position_uid = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setPositionUid($var)
    {
        GPBUtil::checkString($var, True);
        $this->position_uid = $var;

        return $this;
    }

    /**
     *Уникальный идентификатор  инструмента.
     *
     * Generated from protobuf field <code>string instrument_uid = 2;</code>
     * @return string
     */
    public function getInstrumentUid()
    {
        return $this->instrument_uid;
    }

    /**
     *Уникальный идентификатор  инструмента.
     *
     * Generated from protobuf field <code>string instrument_uid = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setInstrumentUid($var)
    {
        GPBUtil::checkString($var, True);
        $this->instrument_uid = $var;

        return $this;
    }

    /**
     *Количество бумаг заблокированных выставленными заявками.
     *
     * Generated from protobuf field <code>int64 blocked = 11;</code>
     * @return int|string
     */
    public function getBlocked()
    {
        return $this->blocked;
    }

    /**
     *Количество бумаг заблокированных выставленными заявками.
     *
     * Generated from protobuf field <code>int64 blocked = 11;</code>
     * @param int|string $var
     * @return $this
     */
    public function setBlocked($var)
    {
        GPBUtil::checkInt64($var);
        $this->blocked = $var;

        return $this;
    }

    /**
     *Текущий незаблокированный баланс.
     *
     * Generated from protobuf field <code>int64 balance = 21;</code>
     * @return int|string
     */
    public function getBalance()
    {
        return $this->balance;
    }

    /**
     *Текущий незаблокированный баланс.
     *
     * Generated from protobuf field <code>int64 balance = 21;</code>
     * @param int|string $var
     * @return $this
     */
    public function setBalance($var)
    {
        GPBUtil::checkInt64($var);
        $this->balance = $var;

        return $this;
    }

}

