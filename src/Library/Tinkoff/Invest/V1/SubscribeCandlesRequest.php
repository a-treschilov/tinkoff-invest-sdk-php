<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: marketdata.proto

namespace Tinkoff\Invest\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * subscribeCandles | Изменения статуса подписки на свечи.
 *
 * Generated from protobuf message <code>tinkoff.public.invest.api.contract.v1.SubscribeCandlesRequest</code>
 */
class SubscribeCandlesRequest extends \Google\Protobuf\Internal\Message
{
    /**
     *Изменение статуса подписки.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.SubscriptionAction subscription_action = 1;</code>
     */
    protected $subscription_action = 0;
    /**
     *Массив инструментов для подписки на свечи.
     *
     * Generated from protobuf field <code>repeated .tinkoff.public.invest.api.contract.v1.CandleInstrument instruments = 2;</code>
     */
    private $instruments;
    /**
     *Флаг ожидания закрытия временного интервала для отправки свечи.
     *
     * Generated from protobuf field <code>bool waiting_close = 3;</code>
     */
    protected $waiting_close = false;
    /**
     *Источник свечей.
     *
     * Generated from protobuf field <code>optional .tinkoff.public.invest.api.contract.v1.GetCandlesRequest.CandleSource candle_source_type = 9;</code>
     */
    protected $candle_source_type = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $subscription_action
     *          Изменение статуса подписки.
     *     @type array<\Tinkoff\Invest\V1\CandleInstrument>|\Google\Protobuf\Internal\RepeatedField $instruments
     *          Массив инструментов для подписки на свечи.
     *     @type bool $waiting_close
     *          Флаг ожидания закрытия временного интервала для отправки свечи.
     *     @type int $candle_source_type
     *          Источник свечей.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Marketdata::initOnce();
        parent::__construct($data);
    }

    /**
     *Изменение статуса подписки.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.SubscriptionAction subscription_action = 1;</code>
     * @return int
     */
    public function getSubscriptionAction()
    {
        return $this->subscription_action;
    }

    /**
     *Изменение статуса подписки.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.SubscriptionAction subscription_action = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setSubscriptionAction($var)
    {
        GPBUtil::checkEnum($var, \Tinkoff\Invest\V1\SubscriptionAction::class);
        $this->subscription_action = $var;

        return $this;
    }

    /**
     *Массив инструментов для подписки на свечи.
     *
     * Generated from protobuf field <code>repeated .tinkoff.public.invest.api.contract.v1.CandleInstrument instruments = 2;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getInstruments()
    {
        return $this->instruments;
    }

    /**
     *Массив инструментов для подписки на свечи.
     *
     * Generated from protobuf field <code>repeated .tinkoff.public.invest.api.contract.v1.CandleInstrument instruments = 2;</code>
     * @param array<\Tinkoff\Invest\V1\CandleInstrument>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setInstruments($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Tinkoff\Invest\V1\CandleInstrument::class);
        $this->instruments = $arr;

        return $this;
    }

    /**
     *Флаг ожидания закрытия временного интервала для отправки свечи.
     *
     * Generated from protobuf field <code>bool waiting_close = 3;</code>
     * @return bool
     */
    public function getWaitingClose()
    {
        return $this->waiting_close;
    }

    /**
     *Флаг ожидания закрытия временного интервала для отправки свечи.
     *
     * Generated from protobuf field <code>bool waiting_close = 3;</code>
     * @param bool $var
     * @return $this
     */
    public function setWaitingClose($var)
    {
        GPBUtil::checkBool($var);
        $this->waiting_close = $var;

        return $this;
    }

    /**
     *Источник свечей.
     *
     * Generated from protobuf field <code>optional .tinkoff.public.invest.api.contract.v1.GetCandlesRequest.CandleSource candle_source_type = 9;</code>
     * @return int
     */
    public function getCandleSourceType()
    {
        return isset($this->candle_source_type) ? $this->candle_source_type : 0;
    }

    public function hasCandleSourceType()
    {
        return isset($this->candle_source_type);
    }

    public function clearCandleSourceType()
    {
        unset($this->candle_source_type);
    }

    /**
     *Источник свечей.
     *
     * Generated from protobuf field <code>optional .tinkoff.public.invest.api.contract.v1.GetCandlesRequest.CandleSource candle_source_type = 9;</code>
     * @param int $var
     * @return $this
     */
    public function setCandleSourceType($var)
    {
        GPBUtil::checkEnum($var, \Tinkoff\Invest\V1\GetCandlesRequest\CandleSource::class);
        $this->candle_source_type = $var;

        return $this;
    }

}

